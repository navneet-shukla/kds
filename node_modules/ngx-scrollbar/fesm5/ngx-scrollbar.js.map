{"version":3,"file":"ngx-scrollbar.js","sources":["ng://ngx-scrollbar/lib/scrollbar/common.ts","ng://ngx-scrollbar/lib/scroll-viewport.ts","ng://ngx-scrollbar/lib/ng-scrollbar.model.ts","ng://ngx-scrollbar/lib/utils/scrollbar-manager.ts","ng://ngx-scrollbar/lib/utils/native-scrollbar-size-factory.ts","ng://ngx-scrollbar/lib/ng-scrollbar.ts","ng://ngx-scrollbar/lib/utils/css-variable.pipe.ts","ng://ngx-scrollbar/lib/utils/ng-attr.directive.ts","ng://ngx-scrollbar/lib/utils/resize-sensor.directive.ts","ng://ngx-scrollbar/lib/scrollbar/track/track.ts","ng://ngx-scrollbar/lib/scrollbar/thumb/thumb.ts","ng://ngx-scrollbar/lib/scrollbar/thumb/thumb.directive.ts","ng://ngx-scrollbar/lib/scrollbar/track/track.directive.ts","ng://ngx-scrollbar/lib/scrollbar/scrollbar.ts","ng://ngx-scrollbar/lib/scrollbar/scrollbar.component.ts","ng://ngx-scrollbar/lib/ng-scrollbar.module.ts"],"sourcesContent":["import { tap } from 'rxjs/operators';\r\n\r\nexport function preventSelection(doc: any) {\r\n  return tap(() => {\r\n    doc.onselectstart = () => false;\r\n  });\r\n}\r\n\r\nexport function enableSelection(doc: any) {\r\n  return tap(() => {\r\n    doc.onselectstart = null;\r\n  });\r\n}\r\n\r\nexport function stopPropagation() {\r\n  return tap((e: any) => e.stopPropagation());\r\n}\r\n\r\n/**\r\n * Check if pointer is within scrollbar bounds\r\n */\r\nexport function isWithinBounds(e: any, rect: ClientRect): boolean {\r\n  return (\r\n    e.clientX >= rect.left &&\r\n    e.clientX <= rect.left + rect.width &&\r\n    e.clientY >= rect.top &&\r\n    e.clientY <= rect.top + rect.height\r\n  );\r\n}\r\n","import { Directive, Inject, ElementRef } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { fromEvent, merge, Observable, Observer } from 'rxjs';\r\nimport { map, switchMap, takeUntil, tap } from 'rxjs/operators';\r\nimport { stopPropagation } from './scrollbar/common';\r\n\r\n@Directive({\r\n  selector: '[scrollViewport]'\r\n})\r\nexport class ScrollViewport {\r\n  // Viewport element\r\n  readonly nativeElement: HTMLElement;\r\n  // Content wrapper element\r\n  contentWrapperElement!: HTMLElement;\r\n\r\n  // Stream that emits when pointer event when the viewport is hovered and emits false value when isn't hovered\r\n  hovered!: Observable<boolean>;\r\n  // Stream that emits when viewport is clicked\r\n  clicked!: Observable<any>;\r\n\r\n  // Get viewport size, clientHeight or clientWidth\r\n  get clientHeight(): number {\r\n    return this.nativeElement.clientHeight;\r\n  }\r\n\r\n  get clientWidth(): number {\r\n    return this.nativeElement.clientWidth;\r\n  }\r\n\r\n  get scrollHeight(): number {\r\n    return this.nativeElement.scrollHeight;\r\n  }\r\n\r\n  get scrollWidth(): number {\r\n    return this.nativeElement.scrollWidth;\r\n  }\r\n\r\n  // Get viewport scroll offset, scrollTop or scrollLeft\r\n  get scrollTop(): number {\r\n    return this.nativeElement.scrollTop;\r\n  }\r\n\r\n  get scrollLeft(): number {\r\n    return this.nativeElement.scrollLeft;\r\n  }\r\n\r\n  // Get the available scrollable size\r\n  get scrollMaxX(): number {\r\n    return this.scrollWidth - this.clientWidth;\r\n  }\r\n\r\n  get scrollMaxY(): number {\r\n    return this.scrollHeight - this.clientHeight;\r\n  }\r\n\r\n  get contentHeight(): number {\r\n    return this.contentWrapperElement.clientHeight;\r\n  }\r\n\r\n  constructor(public viewPort: ElementRef,\r\n              @Inject(DOCUMENT) private document: any) {\r\n    this.nativeElement = viewPort.nativeElement;\r\n  }\r\n\r\n  /**\r\n   * Activate viewport pointer events such as 'hovered' and 'clicked' events\r\n   */\r\n  activatePointerEvents(destroyed: Observable<any>): void {\r\n    this.hovered = new Observable((observer: Observer<any>) => {\r\n      // Stream that emits when pointer is moved over the viewport (used to set the hovered state)\r\n      const mouseMove = fromEvent(this.nativeElement, 'mousemove', { passive: true }).pipe(stopPropagation());\r\n      // Stream that emits when pointer leaves the viewport (used to remove the hovered state)\r\n      const mouseLeave = fromEvent(this.nativeElement, 'mouseleave').pipe(map(() => false));\r\n      merge(mouseMove, mouseLeave).pipe(\r\n        tap((e: false | any) => observer.next(e)),\r\n        takeUntil(destroyed)\r\n      ).subscribe();\r\n    });\r\n\r\n    this.clicked = new Observable((observer: Observer<any>) => {\r\n      const mouseDown = fromEvent(this.nativeElement, 'mousedown', { passive: true }).pipe(\r\n        tap((e: any) => observer.next(e))\r\n      );\r\n      const mouseUp = fromEvent(this.nativeElement, 'mouseup', { passive: true }).pipe(\r\n        tap(() => observer.next(false))\r\n      );\r\n      mouseDown.pipe(\r\n        switchMap(() => mouseUp),\r\n        takeUntil(destroyed)\r\n      ).subscribe();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set this directive as a non-functional wrapper, called when a custom viewport is used\r\n   */\r\n  setAsWrapper(): void {\r\n    // In this case the default viewport and the default content wrapper will act as a mask\r\n    this.nativeElement.className = 'ng-native-scrollbar-hider ng-scroll-layer';\r\n    if (this.nativeElement.firstElementChild) {\r\n      this.nativeElement.firstElementChild.className = 'ng-scroll-layer';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set this directive as  the viewport, called when no custom viewport is used\r\n   */\r\n  setAsViewport(customClassName: string): void {\r\n    this.nativeElement.className = `ng-native-scrollbar-hider ng-scroll-viewport ${customClassName}`;\r\n    // Check if the custom viewport has only one child and set it as the content wrapper\r\n    if (this.nativeElement.firstElementChild) {\r\n      this.contentWrapperElement = this.nativeElement.firstElementChild as HTMLElement;\r\n      this.contentWrapperElement.classList.add('ng-scroll-content');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Scroll viewport vertically\r\n   */\r\n  scrollYTo(value: number): void {\r\n    this.nativeElement.scrollTop = value;\r\n  }\r\n\r\n  /**\r\n   * Scroll viewport horizontally\r\n   */\r\n  scrollXTo(value: number): void {\r\n    this.nativeElement.scrollLeft = value;\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport type ScrollbarAppearance = 'standard' | 'compact' | undefined;\r\nexport type ScrollbarTrack = 'vertical' | 'horizontal' | 'all' | undefined;\r\nexport type ScrollbarVisibility = 'hover' | 'always' | 'native' | undefined;\r\nexport type ScrollbarPosition = 'native' | 'invertY' | 'invertX' | 'invertAll' | undefined;\r\nexport type ScrollbarPointerEventsMethod = 'viewport' | 'scrollbar' | undefined;\r\n\r\nexport const NG_SCROLLBAR_OPTIONS = new InjectionToken<NgScrollbarOptions>('NG_SCROLLBAR_OPTIONS');\r\n\r\nexport interface NgScrollbarOptions {\r\n  /**\r\n   * Sets the scroll axis of the viewport, there are 3 options:\r\n   *\r\n   * - `vertical` Use both vertical and horizontal scrollbar-control\r\n   * - `horizontal` Use both vertical and horizontal scrollbar-control\r\n   * - `all` Use both vertical and horizontal scrollbar-control\r\n   */\r\n  track?: ScrollbarTrack;\r\n  /**\r\n   * When to show the scrollbar, and there are 3 options:\r\n   *\r\n   * - `native` (default) Scrollbar will be visible when viewport is scrollable like with native scrollbar-control\r\n   * - `hover` Scrollbars are hidden by default, only visible on scrolling or hovering\r\n   * - `always` Scrollbars are always shown even if the viewport is not scrollable\r\n   */\r\n  visibility?: ScrollbarVisibility;\r\n  /**\r\n   *  Sets the appearance of the scrollbar, there are 2 options:\r\n   *\r\n   * - `standard` (default) scrollbar space will be reserved just like with native scrollbar-control.\r\n   * - `compact` scrollbar doesn't reserve any space, they are placed over the viewport.\r\n   */\r\n  appearance?: ScrollbarAppearance;\r\n  /**\r\n   * Sets the position of each scrollbar, there are 4 options:\r\n   *\r\n   * - `native` (Default) Use the default position like in native scrollbar-control.\r\n   * - `invertY` Inverts vertical scrollbar position\r\n   * - `invertX` Inverts Horizontal scrollbar position\r\n   * - `invertAll` Inverts both scrollbar-control positions\r\n   */\r\n  position?: ScrollbarPosition;\r\n  /**\r\n   * Sets the pointer events method\r\n   * Use viewport pointer events  to handle dragging and track click (This makes scrolling work when mouse is over the scrollbar)\r\n   * Use scrollbar pointer events to handle dragging and track click\r\n   */\r\n  pointerEventsMethod?: ScrollbarPointerEventsMethod;\r\n  /** A class forwarded to scrollable viewport element */\r\n  viewClass?: string | undefined;\r\n  /** A class forwarded to the scrollbar track element */\r\n  trackClass?: string | undefined;\r\n  /** A class forwarded to the scrollbar thumb element */\r\n  thumbClass?: string | undefined;\r\n  /** The minimum scrollbar thumb size in px */\r\n  minThumbSize?: number | undefined;\r\n  /** The duration which the scrolling takes to reach its target when scrollbar rail is clicked */\r\n  trackClickScrollDuration?: number | undefined;\r\n  /** A flag used to enable/disable the scrollbar pointer events */\r\n  pointerEventsDisabled?: boolean | undefined;\r\n  /** Debounce interval for detecting changes via window.resize event */\r\n  windowResizeDebounce?: number | undefined;\r\n  /** Debounce interval for detecting changes via ResizeObserver */\r\n  sensorDebounce?: number | undefined;\r\n  /** Whether ResizeObserver is disabled */\r\n  sensorDisabled?: boolean | undefined;\r\n  /** Scroll Audit Time */\r\n  scrollAuditTime?: number | undefined;\r\n}\r\n\r\n/**\r\n * Set of attributes added on the scrollbar wrapper\r\n */\r\nexport interface NgScrollbarState {\r\n  position?: ScrollbarPosition;\r\n  track?: ScrollbarTrack;\r\n  appearance?: ScrollbarAppearance;\r\n  visibility?: ScrollbarVisibility;\r\n  deactivated?: boolean;\r\n  pointerEventsMethod?: ScrollbarPointerEventsMethod;\r\n  dir?: 'rtl' | 'ltr';\r\n  verticalUsed?: boolean;\r\n  horizontalUsed?: boolean;\r\n  isVerticallyScrollable?: boolean;\r\n  isHorizontallyScrollable?: boolean;\r\n  verticalHovered?: boolean;\r\n  horizontalHovered?: boolean;\r\n  verticalDragging?: boolean;\r\n  horizontalDragging?: boolean;\r\n  // Flag used to prevent text selection on content\r\n  scrollbarClicked?: boolean;\r\n}\r\n","import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { getRtlScrollAxisType, RtlScrollAxisType } from '@angular/cdk/platform';\r\nimport { NG_SCROLLBAR_OPTIONS, NgScrollbarOptions } from '../ng-scrollbar.model';\r\n\r\nconst defaultOptions: NgScrollbarOptions = {\r\n  viewClass: '',\r\n  trackClass: '',\r\n  thumbClass: '',\r\n  track: 'vertical',\r\n  appearance: 'compact',\r\n  visibility: 'native',\r\n  position: 'native',\r\n  pointerEventsMethod: 'viewport',\r\n  trackClickScrollDuration: 300,\r\n  minThumbSize: 20,\r\n  windowResizeDebounce: 0,\r\n  sensorDebounce: 0,\r\n  scrollAuditTime: 0\r\n};\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ScrollbarManager {\r\n  readonly globalOptions: NgScrollbarOptions;\r\n\r\n  readonly rtlScrollAxisType: RtlScrollAxisType;\r\n\r\n  constructor(@Optional() @Inject(NG_SCROLLBAR_OPTIONS) options: NgScrollbarOptions) {\r\n    this.globalOptions = options ? { ...defaultOptions, ...options } : defaultOptions;\r\n\r\n    this.rtlScrollAxisType = getRtlScrollAxisType();\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { BehaviorSubject, fromEvent, Observable, of } from 'rxjs';\r\nimport { debounceTime, tap, switchMap } from 'rxjs/operators';\r\nimport { ScrollbarManager } from './scrollbar-manager';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class NativeScrollbarSizeFactory {\r\n  private _nativeScrollbarSize: BehaviorSubject<number>;\r\n  nativeScrollbarSize: Observable<number>;\r\n\r\n  constructor(@Inject(DOCUMENT) private document: any,\r\n              private manager: ScrollbarManager,\r\n              private platform: Platform) {\r\n    if (platform.isBrowser) {\r\n      of(null).pipe(\r\n        tap(() => this._nativeScrollbarSize = new BehaviorSubject<number>(this.getNativeScrollbarSize())),\r\n        tap(() => this.nativeScrollbarSize = this._nativeScrollbarSize.asObservable()),\r\n        switchMap(() => fromEvent(this.document.defaultView, 'resize', { passive: true })),\r\n        debounceTime(this.manager.globalOptions.windowResizeDebounce!),\r\n        tap(() => this._nativeScrollbarSize.next(this.getNativeScrollbarSize()))\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get native scrollbar size\r\n   */\r\n  private getNativeScrollbarSize(): number {\r\n    if (this.platform.ANDROID || this.platform.IOS) {\r\n      return 6;\r\n    }\r\n    const box = this.document.createElement('div');\r\n    box.className = 'ng-scrollbar-measure';\r\n    this.document.body.appendChild(box);\r\n    const size = box.getBoundingClientRect().right;\r\n    this.document.body.removeChild(box);\r\n    // if size is 0, return 15 (for MAC OS browsers)\r\n    return size || 15;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  ViewChild,\r\n  ContentChild,\r\n  OnInit,\r\n  AfterViewChecked,\r\n  OnDestroy,\r\n  NgZone,\r\n  ElementRef,\r\n  EventEmitter,\r\n  ChangeDetectorRef,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { Directionality } from '@angular/cdk/bidi';\r\nimport { fromEvent, Observable, Observer, Subject } from 'rxjs';\r\nimport { auditTime, filter, map, pairwise, pluck, takeUntil, tap } from 'rxjs/operators';\r\nimport { ScrollViewport } from './scroll-viewport';\r\nimport { SmoothScrollElement, SmoothScrollManager, SmoothScrollToOptions } from 'ngx-scrollbar/smooth-scroll';\r\n// Uncomment the following line in development mode\r\n//import { SmoothScrollElement, SmoothScrollManager, SmoothScrollToOptions } from '../../smooth-scroll/src/public_api';\r\nimport {\r\n  ScrollbarAppearance,\r\n  ScrollbarTrack,\r\n  ScrollbarPosition,\r\n  ScrollbarVisibility,\r\n  NgScrollbarState,\r\n  ScrollbarPointerEventsMethod\r\n} from './ng-scrollbar.model';\r\nimport { ScrollbarManager } from './utils/scrollbar-manager';\r\nimport { NativeScrollbarSizeFactory } from './utils/native-scrollbar-size-factory';\r\n\r\n@Component({\r\n  selector: 'ng-scrollbar',\r\n  exportAs: 'ngScrollbar',\r\n  templateUrl: 'ng-scrollbar.html',\r\n  styleUrls: ['ng-scrollbar.scss', 'scrollbar/shared.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: { '[class.ng-scrollbar]': 'true' }\r\n})\r\nexport class NgScrollbar implements OnInit, AfterViewChecked, OnDestroy {\r\n  /** A class forwarded to scrollable viewport element */\r\n  @Input() viewClass: string | undefined = this.manager.globalOptions.viewClass;\r\n  /** A class forwarded to the scrollbar track element */\r\n  @Input() trackClass: string | undefined = this.manager.globalOptions.trackClass;\r\n  /** A class forwarded to the scrollbar thumb element */\r\n  @Input() thumbClass: string | undefined = this.manager.globalOptions.thumbClass;\r\n  /** Minimum scrollbar thumb size */\r\n  @Input() minThumbSize: number | undefined = this.manager.globalOptions.minThumbSize;\r\n  /** The duration which the scrolling takes to reach its target when scrollbar rail is clicked */\r\n  @Input() trackClickScrollDuration: number | undefined = this.manager.globalOptions.trackClickScrollDuration;\r\n  /** A flag used to enable/disable the scrollbar thumb dragged event */\r\n  @Input() pointerEventsDisabled: boolean | undefined = this.manager.globalOptions.pointerEventsDisabled;\r\n  /**\r\n   * Sets the pointer events method\r\n   * Use viewport pointer events  to handle dragging and track click (This makes scrolling work when mouse is over the scrollbar)\r\n   * Use scrollbar pointer events to handle dragging and track click\r\n   */\r\n  @Input() pointerEventsMethod: ScrollbarPointerEventsMethod = this.manager.globalOptions.pointerEventsMethod;\r\n  /** Disable custom scrollbar and switch back to native scrollbar */\r\n  @Input() disabled: boolean = false;\r\n  /**\r\n   * Sets the supported scroll track of the viewport, there are 3 options:\r\n   *\r\n   * - `vertical` Use both vertical and horizontal scrollbar\r\n   * - `horizontal` Use both vertical and horizontal scrollbar\r\n   * - `all` Use both vertical and horizontal scrollbar\r\n   */\r\n  @Input() track: ScrollbarTrack = this.manager.globalOptions.track;\r\n  /**\r\n   * When to show the scrollbar, and there are 3 options:\r\n   *\r\n   * - `native` (default) Scrollbar will be visible when viewport is scrollable like with native scrollbar\r\n   * - `hover` Scrollbars are hidden by default, only visible on scrolling or hovering\r\n   * - `always` Scrollbars are always shown even if the viewport is not scrollable\r\n   */\r\n  @Input() visibility: ScrollbarVisibility = this.manager.globalOptions.visibility;\r\n  /**\r\n   *  Sets the appearance of the scrollbar, there are 2 options:\r\n   *\r\n   * - `standard` (default) scrollbar space will be reserved just like with native scrollbar.\r\n   * - `compact` scrollbar doesn't reserve any space, they are placed over the viewport.\r\n   */\r\n  @Input() appearance: ScrollbarAppearance = this.manager.globalOptions.appearance;\r\n  /**\r\n   * Sets the position of each scrollbar, there are 4 options:\r\n   *\r\n   * - `native` (Default) Use the default position like in native scrollbar.\r\n   * - `invertY` Inverts vertical scrollbar position\r\n   * - `invertX` Inverts Horizontal scrollbar position\r\n   * - `invertAll` Inverts both scrollbar positions\r\n   */\r\n  @Input() position: ScrollbarPosition = this.manager.globalOptions.position;\r\n  /** Debounce interval for detecting changes via ResizeObserver */\r\n  @Input() sensorDebounce: number | undefined = this.manager.globalOptions.sensorDebounce;\r\n  /** Whether ResizeObserver is disabled */\r\n  @Input() sensorDisabled: boolean | undefined = this.manager.globalOptions.sensorDisabled;\r\n  /** Scroll Audit Time */\r\n  @Input() scrollAuditTime: number | undefined = this.manager.globalOptions.scrollAuditTime;\r\n  /** Steam that emits when scrollbar is updated */\r\n  @Output() updated = new EventEmitter<void>();\r\n  /** Default viewport reference */\r\n  @ViewChild(ScrollViewport, { static: true }) private defaultViewPort: ScrollViewport;\r\n  /** Custom viewport reference */\r\n  @ContentChild(ScrollViewport, { static: true }) private customViewPort: ScrollViewport;\r\n  /** Viewport Element */\r\n  viewport: ScrollViewport;\r\n  /** Set of attributes added on the scrollbar wrapper */\r\n  state: NgScrollbarState = {};\r\n  /** Stream that destroys components' observables */\r\n  private destroyed = new Subject<void>();\r\n\r\n  /** Stream that emits on scroll event */\r\n  scrolled: Observable<any>;\r\n  /** Steam that emits scroll event for vertical scrollbar */\r\n  verticalScrolled: Observable<any>;\r\n  /** Steam that emits scroll event for horizontal scrollbar */\r\n  horizontalScrolled: Observable<any>;\r\n\r\n  get nativeElement(): HTMLElement {\r\n    return this.el.nativeElement;\r\n  }\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    private zone: NgZone,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private dir: Directionality,\r\n    private smoothScroll: SmoothScrollManager,\r\n    public manager: ScrollbarManager,\r\n    public nativeScrollbarSizeFactory: NativeScrollbarSizeFactory) {\r\n  }\r\n\r\n  /**\r\n   * Update local state with each change detection\r\n   */\r\n  private updateState() {\r\n    let verticalUsed: boolean = false;\r\n    let horizontalUsed: boolean = false;\r\n    let isVerticallyScrollable: boolean = false;\r\n    let isHorizontallyScrollable: boolean = false;\r\n\r\n    // Check if vertical scrollbar should be displayed\r\n    if (this.track === 'all' || this.track === 'vertical') {\r\n      isVerticallyScrollable = this.viewport.scrollHeight > this.viewport.clientHeight;\r\n      verticalUsed = this.visibility === 'always' || isVerticallyScrollable;\r\n    }\r\n    // Check if horizontal scrollbar should be displayed\r\n    if (this.track === 'all' || this.track === 'horizontal') {\r\n      isHorizontallyScrollable = this.viewport.scrollWidth > this.viewport.clientWidth;\r\n      horizontalUsed = this.visibility === 'always' || isHorizontallyScrollable;\r\n    }\r\n\r\n    // Update inner wrapper attributes\r\n    this._updateState({\r\n      position: this.position,\r\n      track: this.track,\r\n      appearance: this.appearance,\r\n      visibility: this.visibility,\r\n      deactivated: this.disabled,\r\n      dir: this.dir.value,\r\n      pointerEventsMethod: this.pointerEventsMethod,\r\n      verticalUsed,\r\n      horizontalUsed,\r\n      isVerticallyScrollable,\r\n      isHorizontallyScrollable\r\n    });\r\n  }\r\n\r\n  private _updateState(state: NgScrollbarState) {\r\n    this.state = { ...this.state, ...state };\r\n    this.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  private getScrolledByDirection(property: 'scrollLeft' | 'scrollTop') {\r\n    let event: any;\r\n    return this.scrolled.pipe(\r\n      tap((e: any) => event = e),\r\n      pluck('target', property),\r\n      pairwise(),\r\n      filter(([prev, curr]) => prev !== curr),\r\n      map(() => event)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set hovered state if a scrollbar is being hovered\r\n   */\r\n  setHovered(hovered: ScrollbarHovered) {\r\n    this.zone.run(() => this._updateState({ ...hovered }));\r\n  }\r\n\r\n  /**\r\n   * Set dragging state if a scrollbar is being dragged\r\n   */\r\n  setDragging(dragging: ScrollbarDragging) {\r\n    this.zone.run(() => this._updateState({ ...dragging }));\r\n  }\r\n\r\n  /**\r\n   * Set clicked state if a scrollbar track is being click\r\n   */\r\n  setClicked(scrollbarClicked: boolean) {\r\n    this.zone.run(() => this._updateState({ scrollbarClicked }));\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Set the viewport based on user choice\r\n    this.zone.runOutsideAngular(() => {\r\n      if (this.customViewPort) {\r\n        this.viewport = this.customViewPort;\r\n        this.defaultViewPort.setAsWrapper();\r\n      } else {\r\n        this.viewport = this.defaultViewPort;\r\n      }\r\n      // Activate the selected viewport\r\n      this.viewport.setAsViewport(this.viewClass!);\r\n\r\n      let scrollStream = fromEvent(this.viewport.nativeElement, 'scroll', { passive: true });\r\n      // Throttle scroll event if 'scrollAuditTime' is set\r\n      scrollStream = this.scrollAuditTime ? scrollStream.pipe(auditTime(this.scrollAuditTime)) : scrollStream;\r\n      // Initialize scroll streams\r\n      this.scrolled = new Observable((observer: Observer<any>) =>\r\n        scrollStream.pipe(takeUntil(this.destroyed)).subscribe(observer)\r\n      );\r\n      this.verticalScrolled = this.getScrolledByDirection('scrollTop');\r\n      this.horizontalScrolled = this.getScrolledByDirection('scrollLeft');\r\n    });\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.updateState();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed.next();\r\n    this.destroyed.complete();\r\n  }\r\n\r\n  /**\r\n   * Update local state and the internal scrollbar controls\r\n   */\r\n  update() {\r\n    if (!this.state.horizontalUsed) {\r\n      // Auto-height: Set component height to content height\r\n      this.nativeElement.style.height = `${this.viewport.contentHeight}px`;\r\n    }\r\n    this.updated.next();\r\n    this.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  /**\r\n   * Smooth scroll functions\r\n   */\r\n  scrollTo(options: SmoothScrollToOptions): Promise<void> {\r\n    return this.smoothScroll.scrollTo(this.viewport.nativeElement, options);\r\n  }\r\n\r\n  /**\r\n   * Scroll to element by reference or selector\r\n   */\r\n  scrollToElement(target: SmoothScrollElement, options?): Promise<void> {\r\n    return this.smoothScroll.scrollToElement(this.viewport.nativeElement, target, options);\r\n  }\r\n}\r\n\r\ninterface ScrollbarDragging {\r\n  verticalDragging?: boolean;\r\n  horizontalDragging?: boolean;\r\n}\r\n\r\ninterface ScrollbarHovered {\r\n  verticalHovered?: boolean;\r\n  horizontalHovered?: boolean;\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'cssVariable'\r\n})\r\nexport class CssVariable implements PipeTransform {\r\n\r\n  transform(size: number | null, variableName: string | null): SafeHtml {\r\n    if (size === null) {\r\n      size = 0;\r\n    }\r\n\r\n    return this.sanitizer.bypassSecurityTrustStyle(`--${variableName}: -${size}px`);\r\n  }\r\n\r\n  constructor(private sanitizer: DomSanitizer) {\r\n  }\r\n}\r\n","import { Directive, ElementRef, Input } from '@angular/core';\r\nimport { NgScrollbarState } from '../ng-scrollbar.model';\r\n\r\n@Directive({ selector: '[ngAttr]' })\r\nexport class NgAttr {\r\n\r\n  constructor(private el: ElementRef) {\r\n  }\r\n\r\n  @Input() set ngAttr(attrs: NgScrollbarState) {\r\n    for (const [key, value] of Object.entries(attrs)) {\r\n      (this.el.nativeElement as HTMLElement).setAttribute(key, value);\r\n    }\r\n  }\r\n}\r\n","import { Directive, Input, Injectable, Inject, AfterContentInit, OnDestroy, NgZone, Output, EventEmitter } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\r\nimport { from, of, EMPTY, BehaviorSubject, Observable, Subscription, Observer } from 'rxjs';\r\nimport { catchError, debounceTime, map, switchMap } from 'rxjs/operators';\r\nimport { NgScrollbar } from '../ng-scrollbar';\r\n\r\n/**\r\n * Factory that initialize the ResizeObserver if available in the browser\r\n * Otherwise, it lazy-loads the ResizeObserver polyfill\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class ResizeObserverFactory {\r\n  private readonly resizeObserverSource = new BehaviorSubject<any>(null);\r\n  readonly resizeObserverLoader = this.resizeObserverSource.asObservable();\r\n\r\n  constructor(@Inject(DOCUMENT) document: any, platform: Platform) {\r\n    if (platform.isBrowser) {\r\n      const resizeObserverApi = document.defaultView.ResizeObserver\r\n        ? of(document.defaultView.ResizeObserver)\r\n        : from(import('@juggle/resize-observer')).pipe(\r\n          map((module: { ResizeObserver: any }) => module.ResizeObserver),\r\n          catchError((e) => {\r\n            console.log('Unable to load ResizeObserver polyfill', e);\r\n            return EMPTY;\r\n          }));\r\n      this.resizeObserverSource.next(resizeObserverApi);\r\n    }\r\n  }\r\n}\r\n\r\n@Directive({ selector: '[resizeSensor]' })\r\nexport class ResizeSensor implements AfterContentInit, OnDestroy {\r\n\r\n  /** Debounce interval for emitting the changes. */\r\n  @Input('sensorDebounce')\r\n  get debounce(): number {\r\n    return this._debounce;\r\n  }\r\n\r\n  set debounce(value: number) {\r\n    this._debounce = coerceNumberProperty(value);\r\n    this._subscribe();\r\n  }\r\n\r\n  private _debounce: number;\r\n\r\n  /** Whether ResizeObserver is disabled. */\r\n  @Input('sensorDisabled')\r\n  get disabled() {\r\n    return this._disabled;\r\n  }\r\n\r\n  set disabled(value: any) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n    this._disabled ? this._unsubscribe() : this._subscribe();\r\n  }\r\n\r\n  private _disabled: boolean = false;\r\n\r\n  private _subscription: Subscription | null = null;\r\n  private _resizeObserver: any;\r\n\r\n  @Output() resizeSensor = new EventEmitter<void>();\r\n\r\n  constructor(private zone: NgZone,\r\n              private platform: Platform,\r\n              private resizeObserverFactory: ResizeObserverFactory,\r\n              private scrollbar: NgScrollbar) {\r\n    if (!scrollbar) {\r\n      throw new Error('[NgScrollbar Resize Sensor Directive]: Host element must be an NgScrollbar component.');\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    if (!this._subscription && !this._disabled) {\r\n      this._subscribe();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._unsubscribe();\r\n  }\r\n\r\n  private _createObserver(ResizeObserver: any): Observable<void> {\r\n    return new Observable((observer: Observer<void>) => {\r\n      this._resizeObserver = new ResizeObserver(() => observer.next());\r\n      this._resizeObserver.observe(this.scrollbar.viewport.nativeElement);\r\n      if (this.scrollbar.viewport.contentWrapperElement) {\r\n        this._resizeObserver.observe(this.scrollbar.viewport.contentWrapperElement);\r\n      }\r\n    });\r\n  }\r\n\r\n  private _subscribe() {\r\n    this._unsubscribe();\r\n    if (this.platform.isBrowser) {\r\n      this.zone.runOutsideAngular(() => {\r\n        this._subscription = this.resizeObserverFactory.resizeObserverLoader.pipe(\r\n          switchMap((moduleObservable: Observable<any>) => moduleObservable),\r\n          switchMap((ResizeObserver: any) => {\r\n            if (ResizeObserver) {\r\n              const stream = this._createObserver(ResizeObserver);\r\n              return this.debounce ? stream.pipe(debounceTime(this._debounce)) : stream;\r\n            } else {\r\n              return EMPTY;\r\n            }\r\n          })\r\n        ).subscribe(() => this.resizeSensor.emit());\r\n      });\r\n    }\r\n  }\r\n\r\n  private _unsubscribe() {\r\n    if (this._resizeObserver) {\r\n      this._resizeObserver.disconnect();\r\n    }\r\n    if (this._subscription) {\r\n      this._subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { coerceNumberProperty } from '@angular/cdk/coercion';\r\nimport { EMPTY, fromEvent, merge, Observable, of } from 'rxjs';\r\nimport { map, pluck, switchMap, tap } from 'rxjs/operators';\r\nimport { preventSelection, enableSelection, stopPropagation } from '../common';\r\nimport { NgScrollbar } from '../../ng-scrollbar';\r\n\r\nexport abstract class TrackAdapter {\r\n\r\n  // Stream that emits when the track element is clicked\r\n  get clicked(): Observable<any> {\r\n    const mouseDown = fromEvent(this.trackElement, 'mousedown', { passive: true }).pipe(\r\n      stopPropagation(),\r\n      preventSelection(this.document)\r\n    );\r\n    const mouseup = fromEvent(this.document, 'mouseup', { passive: true }).pipe(\r\n      stopPropagation(),\r\n      enableSelection(this.document),\r\n      switchMap(() => EMPTY)\r\n    );\r\n    return merge(mouseDown, mouseup);\r\n  }\r\n\r\n  // Stream that emits when the track element is hovered\r\n  get hovered(): Observable<boolean> {\r\n    const mouseEnter = fromEvent(this.trackElement, 'mouseenter', { passive: true }).pipe(\r\n      stopPropagation(),\r\n      map(() => true)\r\n    );\r\n    const mouseLeave = fromEvent(this.trackElement, 'mouseleave', { passive: true }).pipe(\r\n      stopPropagation(),\r\n      map(() => false)\r\n    );\r\n    return merge(mouseEnter, mouseLeave);\r\n  }\r\n\r\n  // Returns either 'pageX' or 'pageY' according to scrollbar axis\r\n  abstract get pageProperty(): string;\r\n\r\n  // Returns the track size, clientHeight or clientWidth\r\n  abstract get size(): number;\r\n\r\n  // Returns the start offset either 'clientRect.top' or 'clientRect.left'\r\n  abstract get offset(): number;\r\n\r\n  // Get track client rect\r\n  get clientRect(): ClientRect {\r\n    return this.trackElement.getBoundingClientRect();\r\n  }\r\n\r\n  protected constructor(protected cmp: NgScrollbar,\r\n                        protected trackElement: HTMLElement,\r\n                        protected document: any) {\r\n  }\r\n\r\n  /**\r\n   * Stream that emits when scrollbar track is clicked\r\n   */\r\n  onTrackClicked(e: any, thumbSize: number, scrollSize: number): Observable<any> {\r\n    return of(e).pipe(\r\n      pluck(this.pageProperty),\r\n      // Calculate scrollTo position\r\n      map((pageOffset: number) => {\r\n        const clickOffset = pageOffset - this.offset;\r\n        const offset = clickOffset - (thumbSize / 2);\r\n        const ratio = offset / this.size;\r\n        return ratio * scrollSize;\r\n      }),\r\n      // Smooth scroll to position\r\n      tap((value: number) => {\r\n        this.cmp.scrollTo({\r\n          ...this.mapToScrollToOption(value),\r\n          duration: coerceNumberProperty(this.cmp.trackClickScrollDuration)\r\n        });\r\n      })\r\n    );\r\n  }\r\n\r\n  protected abstract mapToScrollToOption(value: number): ScrollToOptions;\r\n}\r\n","import { Input, Output } from '@angular/core';\r\nimport { animationFrameScheduler, of, fromEvent, Observable, Subject } from 'rxjs';\r\nimport { distinctUntilChanged, map, mergeMap, pluck, takeUntil, tap } from 'rxjs/operators';\r\nimport { enableSelection, preventSelection, stopPropagation } from '../common';\r\nimport { NgScrollbar } from '../../ng-scrollbar';\r\nimport { TrackAdapter } from '../track/track';\r\n\r\nexport abstract class ThumbAdapter {\r\n\r\n  @Input() track: TrackAdapter;\r\n\r\n  // Stream that emits dragging state\r\n  private _dragging = new Subject<boolean>();\r\n  @Output() dragging = this._dragging.pipe(distinctUntilChanged());\r\n\r\n  // Returns either 'pageX' or 'pageY' according to scrollbar axis\r\n  protected abstract get pageProperty(): string;\r\n\r\n  // Returns either 'clientHeight' or 'clientWidth' according to scrollbar axis\r\n  protected abstract get clientProperty(): string;\r\n\r\n  abstract get dragStartOffset(): number;\r\n\r\n  // Returns thumb size, clientHeight or clientWidth\r\n  abstract get size(): number;\r\n\r\n  protected abstract get viewportScrollSize(): number;\r\n\r\n  protected abstract get viewportScrollOffset(): number;\r\n\r\n  abstract get viewportScrollMax(): number;\r\n\r\n  get trackMax(): number {\r\n    return this.track.size - this.size;\r\n  }\r\n\r\n  // Get thumb client rect\r\n  get clientRect(): ClientRect {\r\n    return this.thumbElement.getBoundingClientRect();\r\n  }\r\n\r\n  // Stream that emits when scrollbar thumb is clicked\r\n  get clicked(): Observable<any> {\r\n    return fromEvent(this.thumbElement, 'mousedown', { passive: true }).pipe(stopPropagation());\r\n  }\r\n\r\n  protected constructor(protected cmp: NgScrollbar,\r\n                        protected thumbElement: HTMLElement,\r\n                        protected document: any) {\r\n  }\r\n\r\n  // Calculate and update thumb position and size\r\n  update() {\r\n    const size = calculateThumbSize(this.track.size, this.viewportScrollSize, this.cmp.minThumbSize!);\r\n    const position = calculateThumbPosition(this.viewportScrollOffset, this.viewportScrollMax, this.trackMax);\r\n    animationFrameScheduler.schedule(() => this.updateStyles(this.handleDirection(position, this.trackMax), size));\r\n  }\r\n\r\n  /**\r\n   * Stream that emits the 'scrollTo' position when a scrollbar thumb element is dragged\r\n   * This function is called by thumb drag event using viewport or scrollbar pointer events\r\n   */\r\n  dragged(event: any): Observable<number> {\r\n    let trackMaxStart: number;\r\n    let scrollMaxStart: number;\r\n\r\n    const dragStart = of(event).pipe(\r\n      preventSelection(this.document),\r\n      tap(() => {\r\n        // Capture scrollMax and trackMax once\r\n        trackMaxStart = this.trackMax;\r\n        scrollMaxStart = this.viewportScrollMax;\r\n        this.setDragging(true);\r\n      }),\r\n    );\r\n\r\n    const dragging = fromEvent(this.document, 'mousemove', { capture: true, passive: true }).pipe(stopPropagation());\r\n\r\n    const dragEnd = fromEvent(this.document, 'mouseup', { capture: true }).pipe(\r\n      stopPropagation(),\r\n      enableSelection(this.document),\r\n      tap(() => this.setDragging(false))\r\n    );\r\n\r\n    return dragStart.pipe(\r\n      pluck(this.pageProperty),\r\n      map((pageOffset: number) => pageOffset - this.dragStartOffset),\r\n      mergeMap((mouseDownOffset: number) => dragging.pipe(\r\n        pluck(this.clientProperty),\r\n        // Calculate how far the pointer is from the top/left of the scrollbar (minus the dragOffset).\r\n        map((mouseOffset: number) => mouseOffset - this.track.offset),\r\n        map((offset: number) => scrollMaxStart * (offset - mouseDownOffset) / trackMaxStart),\r\n        map((position: number) => this.handleDrag(position, scrollMaxStart)),\r\n        tap((position: number) => this.scrollTo(position)),\r\n        takeUntil(dragEnd)\r\n      ))\r\n    );\r\n  }\r\n\r\n  // Set dragging state\r\n  protected abstract setDragging(value: boolean): void;\r\n\r\n  // Scroll viewport instantly\r\n  protected abstract scrollTo(position: number): void;\r\n\r\n  // Update thumb element size and position\r\n  protected abstract updateStyles(position: number, size: number): void;\r\n\r\n  // Handle dragging position (Support LTR and RTL directions for the horizontal scrollbar)\r\n  protected abstract handleDrag(position: number, scrollMax?: number): number;\r\n\r\n  // Handle scrolling position (Support LTR and RTL directions for the horizontal scrollbar)\r\n  protected abstract handleDirection(position: number, scrollMax?: number): number;\r\n}\r\n\r\n/**\r\n * Calculate scrollbar thumb size\r\n */\r\nfunction calculateThumbSize(trackSize: number, contentSize: number, minThumbSize: number): number {\r\n  const scrollbarRatio = trackSize / contentSize;\r\n  const thumbSize = scrollbarRatio * trackSize;\r\n  return Math.max(~~thumbSize, minThumbSize);\r\n}\r\n\r\n/**\r\n * Calculate scrollbar thumb position\r\n */\r\nfunction calculateThumbPosition(scrollPosition: number, scrollMax: number, trackMax: number): number {\r\n  return scrollPosition * trackMax / scrollMax;\r\n}\r\n","import { Directive, Inject, ElementRef } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { RtlScrollAxisType } from '@angular/cdk/platform';\r\nimport { Directionality } from '@angular/cdk/bidi';\r\nimport { NgScrollbar } from '../../ng-scrollbar';\r\nimport { ThumbAdapter } from './thumb';\r\n\r\n@Directive({ selector: '[scrollbarThumbX]' })\r\nexport class ThumbXDirective extends ThumbAdapter {\r\n\r\n  protected get clientProperty(): string {\r\n    return 'clientX';\r\n  }\r\n\r\n  protected get pageProperty(): string {\r\n    return 'pageX';\r\n  }\r\n\r\n  protected get viewportScrollSize(): number {\r\n    return this.cmp.viewport.scrollWidth;\r\n  }\r\n\r\n  protected get viewportScrollOffset(): number {\r\n    return this.cmp.viewport.scrollLeft;\r\n  }\r\n\r\n  get viewportScrollMax(): number {\r\n    return this.cmp.viewport.scrollMaxX;\r\n  }\r\n\r\n  get dragStartOffset(): number {\r\n    return this.clientRect.left;\r\n  }\r\n\r\n  get size(): number {\r\n    return this.thumbElement.clientWidth;\r\n  }\r\n\r\n  constructor(protected cmp: NgScrollbar,\r\n              protected element: ElementRef,\r\n              @Inject(DOCUMENT) protected document: any,\r\n              protected dir: Directionality) {\r\n    super(cmp, element.nativeElement, document);\r\n  }\r\n\r\n  protected updateStyles(position: number, size: number) {\r\n    this.thumbElement.style.width = `${size}px`;\r\n    this.thumbElement.style.transform = `translate3d(${position}px, 0, 0)`;\r\n  }\r\n\r\n  protected handleDrag(position: number, scrollMax: number): number {\r\n    if (this.dir.value === 'rtl') {\r\n      if (this.cmp.manager.rtlScrollAxisType === RtlScrollAxisType.NEGATED) {\r\n        return position - scrollMax;\r\n      }\r\n      if (this.cmp.manager.rtlScrollAxisType === RtlScrollAxisType.INVERTED) {\r\n        return scrollMax - position;\r\n      }\r\n      // Keeping this as a memo\r\n      // if (this.rtlScrollAxisType === RtlScrollAxisType.NORMAL) {\r\n      //   return position;\r\n      // }\r\n    }\r\n    return position;\r\n  }\r\n\r\n  protected handleDirection(position: number, trackMax: number): number {\r\n    if (this.dir.value === 'rtl') {\r\n      if (this.cmp.manager.rtlScrollAxisType === RtlScrollAxisType.INVERTED) {\r\n        return -position;\r\n      }\r\n      if (this.cmp.manager.rtlScrollAxisType === RtlScrollAxisType.NORMAL) {\r\n        return position - trackMax;\r\n      }\r\n      // Keeping this as a memo\r\n      // if (this.rtlScrollAxisType === RtlScrollAxisType.NEGATED) {\r\n      //   return position;\r\n      // }\r\n    }\r\n    return position;\r\n  }\r\n\r\n  protected setDragging(value: boolean): void {\r\n    this.cmp.setDragging({ horizontalDragging: value });\r\n  }\r\n\r\n  protected scrollTo(position: number): void {\r\n    this.cmp.viewport.scrollXTo(position);\r\n  }\r\n}\r\n\r\n@Directive({ selector: '[scrollbarThumbY]' })\r\nexport class ThumbYDirective extends ThumbAdapter {\r\n\r\n  protected get pageProperty(): string {\r\n    return 'pageY';\r\n  }\r\n\r\n  protected get viewportScrollSize(): number {\r\n    return this.cmp.viewport.scrollHeight;\r\n  }\r\n\r\n  protected get viewportScrollOffset(): number {\r\n    return this.cmp.viewport.scrollTop;\r\n  }\r\n\r\n  get viewportScrollMax(): number {\r\n    return this.cmp.viewport.scrollMaxY;\r\n  }\r\n\r\n  protected get clientProperty(): string {\r\n    return 'clientY';\r\n  }\r\n\r\n  get dragStartOffset(): number {\r\n    return this.clientRect.top;\r\n  }\r\n\r\n  get size(): number {\r\n    return this.thumbElement.clientHeight;\r\n  }\r\n\r\n  constructor(protected cmp: NgScrollbar,\r\n              protected element: ElementRef,\r\n              @Inject(DOCUMENT) protected document: any) {\r\n    super(cmp, element.nativeElement, document);\r\n  }\r\n\r\n\r\n  protected updateStyles(position: number, size: number): void {\r\n    this.thumbElement.style.height = `${size}px`;\r\n    this.thumbElement.style.transform = `translate3d(0px, ${position}px, 0)`;\r\n  }\r\n\r\n  protected handleDrag(position: number): number {\r\n    return position;\r\n  }\r\n\r\n  protected handleDirection(position: number): number {\r\n    return position;\r\n  }\r\n\r\n  protected setDragging(value: boolean): void {\r\n    this.cmp.setDragging({ verticalDragging: value });\r\n  }\r\n\r\n  protected scrollTo(position: number): void {\r\n    this.cmp.viewport.scrollYTo(position);\r\n  }\r\n}\r\n","import { Directive, ElementRef, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { TrackAdapter } from './track';\nimport { NgScrollbar } from '../../ng-scrollbar';\n\n@Directive({ selector: '[scrollbarTrackX]' })\nexport class TrackXDirective extends TrackAdapter {\n\n  get pageProperty(): string {\n    return 'pageX';\n  }\n\n  get offset(): number {\n    return this.clientRect.left;\n  }\n\n  get size(): number {\n    return this.trackElement.clientWidth;\n  }\n\n  constructor(protected cmp: NgScrollbar, trackElement: ElementRef, @Inject(DOCUMENT) protected document: any) {\n    super(cmp, trackElement.nativeElement, document);\n  }\n\n  protected mapToScrollToOption(value: number): ScrollToOptions {\n    return { left: value };\n  }\n}\n\n@Directive({ selector: '[scrollbarTrackY]' })\nexport class TrackYDirective extends TrackAdapter {\n\n  get pageProperty(): string {\n    return 'pageY';\n  }\n\n  get offset(): number {\n    return this.clientRect.top;\n  }\n\n  get size(): number {\n    return this.trackElement.clientHeight;\n  }\n\n  constructor(protected cmp: NgScrollbar, trackElement: ElementRef, @Inject(DOCUMENT) protected document: any) {\n    super(cmp, trackElement.nativeElement, document);\n  }\n\n  protected mapToScrollToOption(value: number): ScrollToOptions {\n    return { top: value };\n  }\n}\n","import { OnDestroy, OnInit, NgZone } from '@angular/core';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { asyncScheduler, EMPTY, merge, Observable, Subject } from 'rxjs';\r\nimport { distinctUntilChanged, map, switchMap, takeUntil, tap } from 'rxjs/operators';\r\nimport { NgScrollbar } from '../ng-scrollbar';\r\nimport { ThumbAdapter } from './thumb/thumb';\r\nimport { TrackAdapter } from './track/track';\r\nimport { isWithinBounds } from './common';\r\n\r\nexport abstract class Scrollbar implements OnInit, OnDestroy {\r\n\r\n  // Thumb directive reference\r\n  readonly thumb: ThumbAdapter;\r\n  // Track directive reference\r\n  readonly track: TrackAdapter;\r\n  // Stream that emits to unsubscribe from all streams\r\n  protected readonly destroyed = new Subject<void>();\r\n\r\n  /**\r\n   * Viewport pointer events\r\n   * The following streams are only activated when (pointerEventsMethod === 'viewport')\r\n   */\r\n  protected viewportTrackClicked!: Subject<any>;\r\n  protected viewportThumbClicked!: Subject<any>;\r\n\r\n  protected abstract get viewportScrollSize(): number;\r\n\r\n  protected constructor(public cmp: NgScrollbar, protected platform: Platform, protected document: any, protected zone: NgZone) {\r\n  }\r\n\r\n  /**\r\n   * Activate scrollbar pointer events\r\n   */\r\n  private activatePointerEvents(): Observable<any> {\r\n    // Stream that emits when scrollbar thumb is dragged\r\n    let thumbDragEvent: Observable<any> = EMPTY;\r\n    // Stream that emits when scrollbar track is clicked\r\n    let trackClickEvent: Observable<any> = EMPTY;\r\n    // Stream that emits when scrollbar track is hovered\r\n    let trackHoveredEvent: Observable<any> = EMPTY;\r\n\r\n    // Set the method used for the pointer events option\r\n    if (this.cmp.pointerEventsMethod === 'viewport') {\r\n      // Pointer events using the viewport\r\n      this.viewportTrackClicked = new Subject<any>();\r\n      this.viewportThumbClicked = new Subject<any>();\r\n\r\n      // Activate the pointer events of the viewport directive\r\n      this.cmp.viewport.activatePointerEvents(this.destroyed);\r\n\r\n      // Set streams\r\n      thumbDragEvent = this.viewportThumbClicked;\r\n      trackClickEvent = this.viewportTrackClicked;\r\n      trackHoveredEvent = this.cmp.viewport.hovered.pipe(\r\n        // Check if track is hovered\r\n        map((e: any) => isWithinBounds(e, this.track.clientRect)),\r\n        distinctUntilChanged(),\r\n        // Enable / disable text selection\r\n        tap((hovered: boolean) => this.document.onselectstart = hovered ? () => false : null)\r\n      );\r\n\r\n      this.cmp.viewport.clicked.pipe(\r\n        tap((e: any) => {\r\n          if (e) {\r\n            if (isWithinBounds(e, this.thumb.clientRect)) {\r\n              this.viewportThumbClicked.next(e);\r\n            } else if (isWithinBounds(e, this.track.clientRect)) {\r\n              this.cmp.setClicked(true);\r\n              this.viewportTrackClicked.next(e);\r\n            }\r\n          } else {\r\n            this.cmp.setClicked(false);\r\n          }\r\n        }),\r\n        takeUntil(this.destroyed)\r\n      ).subscribe();\r\n    } else {\r\n      // Pointer events method is using 'scrollbar'\r\n      thumbDragEvent = this.thumb.clicked;\r\n      trackClickEvent = this.track.clicked;\r\n      trackHoveredEvent = this.track.hovered;\r\n    }\r\n\r\n    return merge(\r\n      // Activate scrollbar hovered event\r\n      trackHoveredEvent.pipe(tap((e: boolean) => this.setHovered(e))),\r\n      // Activate scrollbar thumb drag event\r\n      thumbDragEvent.pipe(switchMap((e: any) => this.thumb.dragged(e))),\r\n      // Activate scrollbar track click event\r\n      trackClickEvent.pipe(switchMap((e: any) => this.track.onTrackClicked(e, this.thumb.size, this.viewportScrollSize)))\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.zone.runOutsideAngular(() => {\r\n      // Activate pointer events on Desktop only\r\n      if (!(this.platform.IOS || this.platform.ANDROID) && !this.cmp.pointerEventsDisabled) {\r\n        this.activatePointerEvents().pipe(takeUntil(this.destroyed)).subscribe();\r\n      }\r\n\r\n      // Stream that emits when host component is updated\r\n      const updated = this.cmp.updated.pipe(tap(() => this.onUpdated()));\r\n\r\n      // Update scrollbar thumb when viewport is scrolled and when scrollbar component is updated\r\n      merge(this.cmp.scrolled, updated).pipe(\r\n        tap(() => this.thumb.update()),\r\n        takeUntil(this.destroyed)\r\n      ).subscribe();\r\n\r\n      // Initialize scrollbar\r\n      asyncScheduler.schedule(() => this.thumb.update(), 100);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed.next();\r\n    this.destroyed.complete();\r\n\r\n    // Clean up viewport streams if used\r\n    if (this.viewportThumbClicked && this.viewportTrackClicked) {\r\n      this.viewportTrackClicked.complete();\r\n      this.viewportThumbClicked.complete();\r\n    }\r\n  }\r\n\r\n  protected abstract setHovered(value: boolean): void;\r\n\r\n  protected abstract onUpdated(): void;\r\n}\r\n","import { Component, Inject, NgZone, ChangeDetectionStrategy, ElementRef, ViewChild } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { TrackXDirective, TrackYDirective } from './track/track.directive';\r\nimport { ThumbXDirective, ThumbYDirective } from './thumb/thumb.directive';\r\nimport { NgScrollbar } from '../ng-scrollbar';\r\nimport { Scrollbar } from './scrollbar';\r\n\r\n@Component({\r\n  selector: 'scrollbar-y',\r\n  host: { '[class.scrollbar-control]': 'true' },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['./vertical.scss'],\r\n  template: `\r\n    <div scrollbarTrackY class=\"ng-scrollbar-track {{cmp.trackClass}}\">\r\n      <div scrollbarThumbY [track]=\"track\" class=\"ng-scrollbar-thumb {{cmp.thumbClass}}\"></div>\r\n    </div>\r\n  `\r\n})\r\nexport class ScrollbarY extends Scrollbar {\r\n\r\n  @ViewChild(TrackYDirective, { static: true }) readonly track: TrackYDirective;\r\n  @ViewChild(ThumbYDirective, { static: true }) readonly thumb: ThumbYDirective;\r\n\r\n  protected get viewportScrollSize(): number {\r\n    return this.cmp.viewport.scrollHeight;\r\n  }\r\n\r\n  constructor(public cmp: NgScrollbar, protected platform: Platform, @Inject(DOCUMENT) protected document: any, protected zone: NgZone) {\r\n    super(cmp, platform, document, zone);\r\n  }\r\n\r\n  protected setHovered(value: boolean): void {\r\n    this.cmp.setHovered({ verticalHovered: value });\r\n  }\r\n\r\n  onUpdated(): void {\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'scrollbar-x',\r\n  host: { '[class.scrollbar-control]': 'true' },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['./horizontal.scss'],\r\n  template: `\r\n    <div scrollbarTrackX class=\"ng-scrollbar-track {{cmp.trackClass}}\">\r\n      <div scrollbarThumbX [track]=\"track\" class=\"ng-scrollbar-thumb {{cmp.thumbClass}}\"></div>\r\n    </div>\r\n  `\r\n})\r\nexport class ScrollbarX extends Scrollbar {\r\n\r\n  @ViewChild(TrackXDirective, { static: true }) readonly track: TrackXDirective;\r\n  @ViewChild(ThumbXDirective, { static: true }) readonly thumb: ThumbXDirective;\r\n\r\n  protected get viewportScrollSize(): number {\r\n    return this.cmp.viewport.scrollWidth;\r\n  }\r\n\r\n  get thickness(): number {\r\n    return this.el.nativeElement.clientHeight;\r\n  }\r\n\r\n  constructor(private el: ElementRef,\r\n              public cmp: NgScrollbar,\r\n              protected platform: Platform,\r\n              @Inject(DOCUMENT) protected document: any, protected zone: NgZone) {\r\n    super(cmp, platform, document, zone);\r\n  }\r\n\r\n  protected setHovered(value: boolean): void {\r\n    this.cmp.setHovered({ horizontalHovered: value });\r\n  }\r\n\r\n  onUpdated(): void {\r\n    // Auto-height: Set root component height to content height\r\n    this.cmp.nativeElement.style.height = this.cmp.appearance === 'standard'\r\n      ? `${this.cmp.viewport.contentHeight + this.thickness}px`\r\n      : `${this.cmp.viewport.contentHeight}px`;\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BidiModule } from '@angular/cdk/bidi';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { PlatformModule } from '@angular/cdk/platform';\r\nimport { SmoothScrollModule } from 'ngx-scrollbar/smooth-scroll';\r\n// Uncomment the following line in development mode\r\n//import { SmoothScrollModule } from '../../smooth-scroll/src/public_api';\r\n\r\nimport { NgScrollbar } from './ng-scrollbar';\r\nimport { CssVariable } from './utils/css-variable.pipe';\r\nimport { NgAttr } from './utils/ng-attr.directive';\r\nimport { ResizeSensor } from './utils/resize-sensor.directive';\r\nimport { ThumbYDirective, ThumbXDirective } from './scrollbar/thumb/thumb.directive';\r\nimport { TrackXDirective, TrackYDirective } from './scrollbar/track/track.directive';\r\nimport { ScrollbarX, ScrollbarY } from './scrollbar/scrollbar.component';\r\nimport { ScrollViewport } from './scroll-viewport';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BidiModule,\r\n    PortalModule,\r\n    PlatformModule,\r\n    SmoothScrollModule\r\n  ],\r\n  declarations: [\r\n    NgScrollbar,\r\n    ScrollViewport,\r\n    CssVariable,\r\n    NgAttr,\r\n    ResizeSensor,\r\n    ThumbYDirective,\r\n    ThumbXDirective,\r\n    TrackXDirective,\r\n    TrackYDirective,\r\n    ScrollbarY,\r\n    ScrollbarX\r\n  ],\r\n  exports: [\r\n    NgScrollbar,\r\n    ScrollViewport\r\n  ]\r\n})\r\nexport class NgScrollbarModule {\r\n}\r\n"],"names":["tslib_1.__values","tslib_1.__extends"],"mappings":"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"}