/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Directive, ElementRef, Inject } from '@angular/core';
import { DOCUMENT } from '@angular/common';
import { TrackAdapter } from './track';
import { NgScrollbar } from '../../ng-scrollbar';
var TrackXDirective = /** @class */ (function (_super) {
    tslib_1.__extends(TrackXDirective, _super);
    function TrackXDirective(cmp, trackElement, document) {
        var _this = _super.call(this, cmp, trackElement.nativeElement, document) || this;
        _this.cmp = cmp;
        _this.document = document;
        return _this;
    }
    Object.defineProperty(TrackXDirective.prototype, "pageProperty", {
        get: /**
         * @return {?}
         */
        function () {
            return 'pageX';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TrackXDirective.prototype, "offset", {
        get: /**
         * @return {?}
         */
        function () {
            return this.clientRect.left;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TrackXDirective.prototype, "size", {
        get: /**
         * @return {?}
         */
        function () {
            return this.trackElement.clientWidth;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @protected
     * @param {?} value
     * @return {?}
     */
    TrackXDirective.prototype.mapToScrollToOption = /**
     * @protected
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return { left: value };
    };
    TrackXDirective.decorators = [
        { type: Directive, args: [{ selector: '[scrollbarTrackX]' },] }
    ];
    /** @nocollapse */
    TrackXDirective.ctorParameters = function () { return [
        { type: NgScrollbar },
        { type: ElementRef },
        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }
    ]; };
    return TrackXDirective;
}(TrackAdapter));
export { TrackXDirective };
if (false) {
    /**
     * @type {?}
     * @protected
     */
    TrackXDirective.prototype.cmp;
    /**
     * @type {?}
     * @protected
     */
    TrackXDirective.prototype.document;
}
var TrackYDirective = /** @class */ (function (_super) {
    tslib_1.__extends(TrackYDirective, _super);
    function TrackYDirective(cmp, trackElement, document) {
        var _this = _super.call(this, cmp, trackElement.nativeElement, document) || this;
        _this.cmp = cmp;
        _this.document = document;
        return _this;
    }
    Object.defineProperty(TrackYDirective.prototype, "pageProperty", {
        get: /**
         * @return {?}
         */
        function () {
            return 'pageY';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TrackYDirective.prototype, "offset", {
        get: /**
         * @return {?}
         */
        function () {
            return this.clientRect.top;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TrackYDirective.prototype, "size", {
        get: /**
         * @return {?}
         */
        function () {
            return this.trackElement.clientHeight;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @protected
     * @param {?} value
     * @return {?}
     */
    TrackYDirective.prototype.mapToScrollToOption = /**
     * @protected
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return { top: value };
    };
    TrackYDirective.decorators = [
        { type: Directive, args: [{ selector: '[scrollbarTrackY]' },] }
    ];
    /** @nocollapse */
    TrackYDirective.ctorParameters = function () { return [
        { type: NgScrollbar },
        { type: ElementRef },
        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }
    ]; };
    return TrackYDirective;
}(TrackAdapter));
export { TrackYDirective };
if (false) {
    /**
     * @type {?}
     * @protected
     */
    TrackYDirective.prototype.cmp;
    /**
     * @type {?}
     * @protected
     */
    TrackYDirective.prototype.document;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhY2suZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXNjcm9sbGJhci8iLCJzb3VyY2VzIjpbImxpYi9zY3JvbGxiYXIvdHJhY2svdHJhY2suZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMzQyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUVqRDtJQUNxQywyQ0FBWTtJQWMvQyx5QkFBc0IsR0FBZ0IsRUFBRSxZQUF3QixFQUE4QixRQUFhO1FBQTNHLFlBQ0Usa0JBQU0sR0FBRyxFQUFFLFlBQVksQ0FBQyxhQUFhLEVBQUUsUUFBUSxDQUFDLFNBQ2pEO1FBRnFCLFNBQUcsR0FBSCxHQUFHLENBQWE7UUFBd0QsY0FBUSxHQUFSLFFBQVEsQ0FBSzs7SUFFM0csQ0FBQztJQWRELHNCQUFJLHlDQUFZOzs7O1FBQWhCO1lBQ0UsT0FBTyxPQUFPLENBQUM7UUFDakIsQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSxtQ0FBTTs7OztRQUFWO1lBQ0UsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQztRQUM5QixDQUFDOzs7T0FBQTtJQUVELHNCQUFJLGlDQUFJOzs7O1FBQVI7WUFDRSxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUFDO1FBQ3ZDLENBQUM7OztPQUFBOzs7Ozs7SUFNUyw2Q0FBbUI7Ozs7O0lBQTdCLFVBQThCLEtBQWE7UUFDekMsT0FBTyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsQ0FBQztJQUN6QixDQUFDOztnQkFyQkYsU0FBUyxTQUFDLEVBQUUsUUFBUSxFQUFFLG1CQUFtQixFQUFFOzs7O2dCQUZuQyxXQUFXO2dCQUhBLFVBQVU7Z0RBb0J1QyxNQUFNLFNBQUMsUUFBUTs7SUFPcEYsc0JBQUM7Q0FBQSxBQXRCRCxDQUNxQyxZQUFZLEdBcUJoRDtTQXJCWSxlQUFlOzs7Ozs7SUFjZCw4QkFBMEI7Ozs7O0lBQTRCLG1DQUF5Qzs7QUFTN0c7SUFDcUMsMkNBQVk7SUFjL0MseUJBQXNCLEdBQWdCLEVBQUUsWUFBd0IsRUFBOEIsUUFBYTtRQUEzRyxZQUNFLGtCQUFNLEdBQUcsRUFBRSxZQUFZLENBQUMsYUFBYSxFQUFFLFFBQVEsQ0FBQyxTQUNqRDtRQUZxQixTQUFHLEdBQUgsR0FBRyxDQUFhO1FBQXdELGNBQVEsR0FBUixRQUFRLENBQUs7O0lBRTNHLENBQUM7SUFkRCxzQkFBSSx5Q0FBWTs7OztRQUFoQjtZQUNFLE9BQU8sT0FBTyxDQUFDO1FBQ2pCLENBQUM7OztPQUFBO0lBRUQsc0JBQUksbUNBQU07Ozs7UUFBVjtZQUNFLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUM7UUFDN0IsQ0FBQzs7O09BQUE7SUFFRCxzQkFBSSxpQ0FBSTs7OztRQUFSO1lBQ0UsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLFlBQVksQ0FBQztRQUN4QyxDQUFDOzs7T0FBQTs7Ozs7O0lBTVMsNkNBQW1COzs7OztJQUE3QixVQUE4QixLQUFhO1FBQ3pDLE9BQU8sRUFBRSxHQUFHLEVBQUUsS0FBSyxFQUFFLENBQUM7SUFDeEIsQ0FBQzs7Z0JBckJGLFNBQVMsU0FBQyxFQUFFLFFBQVEsRUFBRSxtQkFBbUIsRUFBRTs7OztnQkExQm5DLFdBQVc7Z0JBSEEsVUFBVTtnREE0Q3VDLE1BQU0sU0FBQyxRQUFROztJQU9wRixzQkFBQztDQUFBLEFBdEJELENBQ3FDLFlBQVksR0FxQmhEO1NBckJZLGVBQWU7Ozs7OztJQWNkLDhCQUEwQjs7Ozs7SUFBNEIsbUNBQXlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBJbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERPQ1VNRU5UIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IFRyYWNrQWRhcHRlciB9IGZyb20gJy4vdHJhY2snO1xuaW1wb3J0IHsgTmdTY3JvbGxiYXIgfSBmcm9tICcuLi8uLi9uZy1zY3JvbGxiYXInO1xuXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdbc2Nyb2xsYmFyVHJhY2tYXScgfSlcbmV4cG9ydCBjbGFzcyBUcmFja1hEaXJlY3RpdmUgZXh0ZW5kcyBUcmFja0FkYXB0ZXIge1xuXG4gIGdldCBwYWdlUHJvcGVydHkoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gJ3BhZ2VYJztcbiAgfVxuXG4gIGdldCBvZmZzZXQoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5jbGllbnRSZWN0LmxlZnQ7XG4gIH1cblxuICBnZXQgc2l6ZSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLnRyYWNrRWxlbWVudC5jbGllbnRXaWR0aDtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBjbXA6IE5nU2Nyb2xsYmFyLCB0cmFja0VsZW1lbnQ6IEVsZW1lbnRSZWYsIEBJbmplY3QoRE9DVU1FTlQpIHByb3RlY3RlZCBkb2N1bWVudDogYW55KSB7XG4gICAgc3VwZXIoY21wLCB0cmFja0VsZW1lbnQubmF0aXZlRWxlbWVudCwgZG9jdW1lbnQpO1xuICB9XG5cbiAgcHJvdGVjdGVkIG1hcFRvU2Nyb2xsVG9PcHRpb24odmFsdWU6IG51bWJlcik6IFNjcm9sbFRvT3B0aW9ucyB7XG4gICAgcmV0dXJuIHsgbGVmdDogdmFsdWUgfTtcbiAgfVxufVxuXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdbc2Nyb2xsYmFyVHJhY2tZXScgfSlcbmV4cG9ydCBjbGFzcyBUcmFja1lEaXJlY3RpdmUgZXh0ZW5kcyBUcmFja0FkYXB0ZXIge1xuXG4gIGdldCBwYWdlUHJvcGVydHkoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gJ3BhZ2VZJztcbiAgfVxuXG4gIGdldCBvZmZzZXQoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5jbGllbnRSZWN0LnRvcDtcbiAgfVxuXG4gIGdldCBzaXplKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMudHJhY2tFbGVtZW50LmNsaWVudEhlaWdodDtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBjbXA6IE5nU2Nyb2xsYmFyLCB0cmFja0VsZW1lbnQ6IEVsZW1lbnRSZWYsIEBJbmplY3QoRE9DVU1FTlQpIHByb3RlY3RlZCBkb2N1bWVudDogYW55KSB7XG4gICAgc3VwZXIoY21wLCB0cmFja0VsZW1lbnQubmF0aXZlRWxlbWVudCwgZG9jdW1lbnQpO1xuICB9XG5cbiAgcHJvdGVjdGVkIG1hcFRvU2Nyb2xsVG9PcHRpb24odmFsdWU6IG51bWJlcik6IFNjcm9sbFRvT3B0aW9ucyB7XG4gICAgcmV0dXJuIHsgdG9wOiB2YWx1ZSB9O1xuICB9XG59XG4iXX0=