/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Directive, Inject, ElementRef } from '@angular/core';
import { DOCUMENT } from '@angular/common';
import { RtlScrollAxisType } from '@angular/cdk/platform';
import { Directionality } from '@angular/cdk/bidi';
import { NgScrollbar } from '../../ng-scrollbar';
import { ThumbAdapter } from './thumb';
var ThumbXDirective = /** @class */ (function (_super) {
    tslib_1.__extends(ThumbXDirective, _super);
    function ThumbXDirective(cmp, element, document, dir) {
        var _this = _super.call(this, cmp, element.nativeElement, document) || this;
        _this.cmp = cmp;
        _this.element = element;
        _this.document = document;
        _this.dir = dir;
        return _this;
    }
    Object.defineProperty(ThumbXDirective.prototype, "clientProperty", {
        get: /**
         * @protected
         * @return {?}
         */
        function () {
            return 'clientX';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThumbXDirective.prototype, "pageProperty", {
        get: /**
         * @protected
         * @return {?}
         */
        function () {
            return 'pageX';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThumbXDirective.prototype, "viewportScrollSize", {
        get: /**
         * @protected
         * @return {?}
         */
        function () {
            return this.cmp.viewport.scrollWidth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThumbXDirective.prototype, "viewportScrollOffset", {
        get: /**
         * @protected
         * @return {?}
         */
        function () {
            return this.cmp.viewport.scrollLeft;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThumbXDirective.prototype, "viewportScrollMax", {
        get: /**
         * @return {?}
         */
        function () {
            return this.cmp.viewport.scrollMaxX;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThumbXDirective.prototype, "dragStartOffset", {
        get: /**
         * @return {?}
         */
        function () {
            return this.clientRect.left;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThumbXDirective.prototype, "size", {
        get: /**
         * @return {?}
         */
        function () {
            return this.thumbElement.clientWidth;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @protected
     * @param {?} position
     * @param {?} size
     * @return {?}
     */
    ThumbXDirective.prototype.updateStyles = /**
     * @protected
     * @param {?} position
     * @param {?} size
     * @return {?}
     */
    function (position, size) {
        this.thumbElement.style.width = size + "px";
        this.thumbElement.style.transform = "translate3d(" + position + "px, 0, 0)";
    };
    /**
     * @protected
     * @param {?} position
     * @param {?} scrollMax
     * @return {?}
     */
    ThumbXDirective.prototype.handleDrag = /**
     * @protected
     * @param {?} position
     * @param {?} scrollMax
     * @return {?}
     */
    function (position, scrollMax) {
        if (this.dir.value === 'rtl') {
            if (this.cmp.manager.rtlScrollAxisType === RtlScrollAxisType.NEGATED) {
                return position - scrollMax;
            }
            if (this.cmp.manager.rtlScrollAxisType === RtlScrollAxisType.INVERTED) {
                return scrollMax - position;
            }
            // Keeping this as a memo
            // if (this.rtlScrollAxisType === RtlScrollAxisType.NORMAL) {
            //   return position;
            // }
        }
        return position;
    };
    /**
     * @protected
     * @param {?} position
     * @param {?} trackMax
     * @return {?}
     */
    ThumbXDirective.prototype.handleDirection = /**
     * @protected
     * @param {?} position
     * @param {?} trackMax
     * @return {?}
     */
    function (position, trackMax) {
        if (this.dir.value === 'rtl') {
            if (this.cmp.manager.rtlScrollAxisType === RtlScrollAxisType.INVERTED) {
                return -position;
            }
            if (this.cmp.manager.rtlScrollAxisType === RtlScrollAxisType.NORMAL) {
                return position - trackMax;
            }
            // Keeping this as a memo
            // if (this.rtlScrollAxisType === RtlScrollAxisType.NEGATED) {
            //   return position;
            // }
        }
        return position;
    };
    /**
     * @protected
     * @param {?} value
     * @return {?}
     */
    ThumbXDirective.prototype.setDragging = /**
     * @protected
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.cmp.setDragging({ horizontalDragging: value });
    };
    /**
     * @protected
     * @param {?} position
     * @return {?}
     */
    ThumbXDirective.prototype.scrollTo = /**
     * @protected
     * @param {?} position
     * @return {?}
     */
    function (position) {
        this.cmp.viewport.scrollXTo(position);
    };
    ThumbXDirective.decorators = [
        { type: Directive, args: [{ selector: '[scrollbarThumbX]' },] }
    ];
    /** @nocollapse */
    ThumbXDirective.ctorParameters = function () { return [
        { type: NgScrollbar },
        { type: ElementRef },
        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },
        { type: Directionality }
    ]; };
    return ThumbXDirective;
}(ThumbAdapter));
export { ThumbXDirective };
if (false) {
    /**
     * @type {?}
     * @protected
     */
    ThumbXDirective.prototype.cmp;
    /**
     * @type {?}
     * @protected
     */
    ThumbXDirective.prototype.element;
    /**
     * @type {?}
     * @protected
     */
    ThumbXDirective.prototype.document;
    /**
     * @type {?}
     * @protected
     */
    ThumbXDirective.prototype.dir;
}
var ThumbYDirective = /** @class */ (function (_super) {
    tslib_1.__extends(ThumbYDirective, _super);
    function ThumbYDirective(cmp, element, document) {
        var _this = _super.call(this, cmp, element.nativeElement, document) || this;
        _this.cmp = cmp;
        _this.element = element;
        _this.document = document;
        return _this;
    }
    Object.defineProperty(ThumbYDirective.prototype, "pageProperty", {
        get: /**
         * @protected
         * @return {?}
         */
        function () {
            return 'pageY';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThumbYDirective.prototype, "viewportScrollSize", {
        get: /**
         * @protected
         * @return {?}
         */
        function () {
            return this.cmp.viewport.scrollHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThumbYDirective.prototype, "viewportScrollOffset", {
        get: /**
         * @protected
         * @return {?}
         */
        function () {
            return this.cmp.viewport.scrollTop;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThumbYDirective.prototype, "viewportScrollMax", {
        get: /**
         * @return {?}
         */
        function () {
            return this.cmp.viewport.scrollMaxY;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThumbYDirective.prototype, "clientProperty", {
        get: /**
         * @protected
         * @return {?}
         */
        function () {
            return 'clientY';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThumbYDirective.prototype, "dragStartOffset", {
        get: /**
         * @return {?}
         */
        function () {
            return this.clientRect.top;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ThumbYDirective.prototype, "size", {
        get: /**
         * @return {?}
         */
        function () {
            return this.thumbElement.clientHeight;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @protected
     * @param {?} position
     * @param {?} size
     * @return {?}
     */
    ThumbYDirective.prototype.updateStyles = /**
     * @protected
     * @param {?} position
     * @param {?} size
     * @return {?}
     */
    function (position, size) {
        this.thumbElement.style.height = size + "px";
        this.thumbElement.style.transform = "translate3d(0px, " + position + "px, 0)";
    };
    /**
     * @protected
     * @param {?} position
     * @return {?}
     */
    ThumbYDirective.prototype.handleDrag = /**
     * @protected
     * @param {?} position
     * @return {?}
     */
    function (position) {
        return position;
    };
    /**
     * @protected
     * @param {?} position
     * @return {?}
     */
    ThumbYDirective.prototype.handleDirection = /**
     * @protected
     * @param {?} position
     * @return {?}
     */
    function (position) {
        return position;
    };
    /**
     * @protected
     * @param {?} value
     * @return {?}
     */
    ThumbYDirective.prototype.setDragging = /**
     * @protected
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.cmp.setDragging({ verticalDragging: value });
    };
    /**
     * @protected
     * @param {?} position
     * @return {?}
     */
    ThumbYDirective.prototype.scrollTo = /**
     * @protected
     * @param {?} position
     * @return {?}
     */
    function (position) {
        this.cmp.viewport.scrollYTo(position);
    };
    ThumbYDirective.decorators = [
        { type: Directive, args: [{ selector: '[scrollbarThumbY]' },] }
    ];
    /** @nocollapse */
    ThumbYDirective.ctorParameters = function () { return [
        { type: NgScrollbar },
        { type: ElementRef },
        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }
    ]; };
    return ThumbYDirective;
}(ThumbAdapter));
export { ThumbYDirective };
if (false) {
    /**
     * @type {?}
     * @protected
     */
    ThumbYDirective.prototype.cmp;
    /**
     * @type {?}
     * @protected
     */
    ThumbYDirective.prototype.element;
    /**
     * @type {?}
     * @protected
     */
    ThumbYDirective.prototype.document;
}
//# sourceMappingURL=data:application/json;base64,