/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, Output, ViewChild, ContentChild, NgZone, ElementRef, EventEmitter, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';
import { Directionality } from '@angular/cdk/bidi';
import { fromEvent, Observable, Subject } from 'rxjs';
import { auditTime, filter, map, pairwise, pluck, takeUntil, tap } from 'rxjs/operators';
import { ScrollViewport } from './scroll-viewport';
import { SmoothScrollManager } from 'ngx-scrollbar/smooth-scroll';
import { ScrollbarManager } from './utils/scrollbar-manager';
import { NativeScrollbarSizeFactory } from './utils/native-scrollbar-size-factory';
var NgScrollbar = /** @class */ (function () {
    function NgScrollbar(el, zone, changeDetectorRef, dir, smoothScroll, manager, nativeScrollbarSizeFactory) {
        this.el = el;
        this.zone = zone;
        this.changeDetectorRef = changeDetectorRef;
        this.dir = dir;
        this.smoothScroll = smoothScroll;
        this.manager = manager;
        this.nativeScrollbarSizeFactory = nativeScrollbarSizeFactory;
        /**
         * A class forwarded to scrollable viewport element
         */
        this.viewClass = this.manager.globalOptions.viewClass;
        /**
         * A class forwarded to the scrollbar track element
         */
        this.trackClass = this.manager.globalOptions.trackClass;
        /**
         * A class forwarded to the scrollbar thumb element
         */
        this.thumbClass = this.manager.globalOptions.thumbClass;
        /**
         * Minimum scrollbar thumb size
         */
        this.minThumbSize = this.manager.globalOptions.minThumbSize;
        /**
         * The duration which the scrolling takes to reach its target when scrollbar rail is clicked
         */
        this.trackClickScrollDuration = this.manager.globalOptions.trackClickScrollDuration;
        /**
         * A flag used to enable/disable the scrollbar thumb dragged event
         */
        this.pointerEventsDisabled = this.manager.globalOptions.pointerEventsDisabled;
        /**
         * Sets the pointer events method
         * Use viewport pointer events  to handle dragging and track click (This makes scrolling work when mouse is over the scrollbar)
         * Use scrollbar pointer events to handle dragging and track click
         */
        this.pointerEventsMethod = this.manager.globalOptions.pointerEventsMethod;
        /**
         * Disable custom scrollbar and switch back to native scrollbar
         */
        this.disabled = false;
        /**
         * Sets the supported scroll track of the viewport, there are 3 options:
         *
         * - `vertical` Use both vertical and horizontal scrollbar
         * - `horizontal` Use both vertical and horizontal scrollbar
         * - `all` Use both vertical and horizontal scrollbar
         */
        this.track = this.manager.globalOptions.track;
        /**
         * When to show the scrollbar, and there are 3 options:
         *
         * - `native` (default) Scrollbar will be visible when viewport is scrollable like with native scrollbar
         * - `hover` Scrollbars are hidden by default, only visible on scrolling or hovering
         * - `always` Scrollbars are always shown even if the viewport is not scrollable
         */
        this.visibility = this.manager.globalOptions.visibility;
        /**
         *  Sets the appearance of the scrollbar, there are 2 options:
         *
         * - `standard` (default) scrollbar space will be reserved just like with native scrollbar.
         * - `compact` scrollbar doesn't reserve any space, they are placed over the viewport.
         */
        this.appearance = this.manager.globalOptions.appearance;
        /**
         * Sets the position of each scrollbar, there are 4 options:
         *
         * - `native` (Default) Use the default position like in native scrollbar.
         * - `invertY` Inverts vertical scrollbar position
         * - `invertX` Inverts Horizontal scrollbar position
         * - `invertAll` Inverts both scrollbar positions
         */
        this.position = this.manager.globalOptions.position;
        /**
         * Debounce interval for detecting changes via ResizeObserver
         */
        this.sensorDebounce = this.manager.globalOptions.sensorDebounce;
        /**
         * Whether ResizeObserver is disabled
         */
        this.sensorDisabled = this.manager.globalOptions.sensorDisabled;
        /**
         * Scroll Audit Time
         */
        this.scrollAuditTime = this.manager.globalOptions.scrollAuditTime;
        /**
         * Steam that emits when scrollbar is updated
         */
        this.updated = new EventEmitter();
        /**
         * Set of attributes added on the scrollbar wrapper
         */
        this.state = {};
        /**
         * Stream that destroys components' observables
         */
        this.destroyed = new Subject();
    }
    Object.defineProperty(NgScrollbar.prototype, "nativeElement", {
        get: /**
         * @return {?}
         */
        function () {
            return this.el.nativeElement;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Update local state with each change detection
     */
    /**
     * Update local state with each change detection
     * @private
     * @return {?}
     */
    NgScrollbar.prototype.updateState = /**
     * Update local state with each change detection
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var verticalUsed = false;
        /** @type {?} */
        var horizontalUsed = false;
        /** @type {?} */
        var isVerticallyScrollable = false;
        /** @type {?} */
        var isHorizontallyScrollable = false;
        // Check if vertical scrollbar should be displayed
        if (this.track === 'all' || this.track === 'vertical') {
            isVerticallyScrollable = this.viewport.scrollHeight > this.viewport.clientHeight;
            verticalUsed = this.visibility === 'always' || isVerticallyScrollable;
        }
        // Check if horizontal scrollbar should be displayed
        if (this.track === 'all' || this.track === 'horizontal') {
            isHorizontallyScrollable = this.viewport.scrollWidth > this.viewport.clientWidth;
            horizontalUsed = this.visibility === 'always' || isHorizontallyScrollable;
        }
        // Update inner wrapper attributes
        this._updateState({
            position: this.position,
            track: this.track,
            appearance: this.appearance,
            visibility: this.visibility,
            deactivated: this.disabled,
            dir: this.dir.value,
            pointerEventsMethod: this.pointerEventsMethod,
            verticalUsed: verticalUsed,
            horizontalUsed: horizontalUsed,
            isVerticallyScrollable: isVerticallyScrollable,
            isHorizontallyScrollable: isHorizontallyScrollable
        });
    };
    /**
     * @private
     * @param {?} state
     * @return {?}
     */
    NgScrollbar.prototype._updateState = /**
     * @private
     * @param {?} state
     * @return {?}
     */
    function (state) {
        this.state = tslib_1.__assign({}, this.state, state);
        this.changeDetectorRef.detectChanges();
    };
    /**
     * @private
     * @param {?} property
     * @return {?}
     */
    NgScrollbar.prototype.getScrolledByDirection = /**
     * @private
     * @param {?} property
     * @return {?}
     */
    function (property) {
        /** @type {?} */
        var event;
        return this.scrolled.pipe(tap((/**
         * @param {?} e
         * @return {?}
         */
        function (e) { return event = e; })), pluck('target', property), pairwise(), filter((/**
         * @param {?} __0
         * @return {?}
         */
        function (_a) {
            var _b = tslib_1.__read(_a, 2), prev = _b[0], curr = _b[1];
            return prev !== curr;
        })), map((/**
         * @return {?}
         */
        function () { return event; })));
    };
    /**
     * Set hovered state if a scrollbar is being hovered
     */
    /**
     * Set hovered state if a scrollbar is being hovered
     * @param {?} hovered
     * @return {?}
     */
    NgScrollbar.prototype.setHovered = /**
     * Set hovered state if a scrollbar is being hovered
     * @param {?} hovered
     * @return {?}
     */
    function (hovered) {
        var _this = this;
        this.zone.run((/**
         * @return {?}
         */
        function () { return _this._updateState(tslib_1.__assign({}, hovered)); }));
    };
    /**
     * Set dragging state if a scrollbar is being dragged
     */
    /**
     * Set dragging state if a scrollbar is being dragged
     * @param {?} dragging
     * @return {?}
     */
    NgScrollbar.prototype.setDragging = /**
     * Set dragging state if a scrollbar is being dragged
     * @param {?} dragging
     * @return {?}
     */
    function (dragging) {
        var _this = this;
        this.zone.run((/**
         * @return {?}
         */
        function () { return _this._updateState(tslib_1.__assign({}, dragging)); }));
    };
    /**
     * Set clicked state if a scrollbar track is being click
     */
    /**
     * Set clicked state if a scrollbar track is being click
     * @param {?} scrollbarClicked
     * @return {?}
     */
    NgScrollbar.prototype.setClicked = /**
     * Set clicked state if a scrollbar track is being click
     * @param {?} scrollbarClicked
     * @return {?}
     */
    function (scrollbarClicked) {
        var _this = this;
        this.zone.run((/**
         * @return {?}
         */
        function () { return _this._updateState({ scrollbarClicked: scrollbarClicked }); }));
    };
    /**
     * @return {?}
     */
    NgScrollbar.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        // Set the viewport based on user choice
        this.zone.runOutsideAngular((/**
         * @return {?}
         */
        function () {
            if (_this.customViewPort) {
                _this.viewport = _this.customViewPort;
                _this.defaultViewPort.setAsWrapper();
            }
            else {
                _this.viewport = _this.defaultViewPort;
            }
            // Activate the selected viewport
            _this.viewport.setAsViewport((/** @type {?} */ (_this.viewClass)));
            /** @type {?} */
            var scrollStream = fromEvent(_this.viewport.nativeElement, 'scroll', { passive: true });
            // Throttle scroll event if 'scrollAuditTime' is set
            scrollStream = _this.scrollAuditTime ? scrollStream.pipe(auditTime(_this.scrollAuditTime)) : scrollStream;
            // Initialize scroll streams
            _this.scrolled = new Observable((/**
             * @param {?} observer
             * @return {?}
             */
            function (observer) {
                return scrollStream.pipe(takeUntil(_this.destroyed)).subscribe(observer);
            }));
            _this.verticalScrolled = _this.getScrolledByDirection('scrollTop');
            _this.horizontalScrolled = _this.getScrolledByDirection('scrollLeft');
        }));
    };
    /**
     * @return {?}
     */
    NgScrollbar.prototype.ngAfterViewChecked = /**
     * @return {?}
     */
    function () {
        this.updateState();
    };
    /**
     * @return {?}
     */
    NgScrollbar.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.destroyed.next();
        this.destroyed.complete();
    };
    /**
     * Update local state and the internal scrollbar controls
     */
    /**
     * Update local state and the internal scrollbar controls
     * @return {?}
     */
    NgScrollbar.prototype.update = /**
     * Update local state and the internal scrollbar controls
     * @return {?}
     */
    function () {
        if (!this.state.horizontalUsed) {
            // Auto-height: Set component height to content height
            this.nativeElement.style.height = this.viewport.contentHeight + "px";
        }
        this.updated.next();
        this.changeDetectorRef.detectChanges();
    };
    /**
     * Smooth scroll functions
     */
    /**
     * Smooth scroll functions
     * @param {?} options
     * @return {?}
     */
    NgScrollbar.prototype.scrollTo = /**
     * Smooth scroll functions
     * @param {?} options
     * @return {?}
     */
    function (options) {
        return this.smoothScroll.scrollTo(this.viewport.nativeElement, options);
    };
    /**
     * Scroll to element by reference or selector
     */
    /**
     * Scroll to element by reference or selector
     * @param {?} target
     * @param {?=} options
     * @return {?}
     */
    NgScrollbar.prototype.scrollToElement = /**
     * Scroll to element by reference or selector
     * @param {?} target
     * @param {?=} options
     * @return {?}
     */
    function (target, options) {
        return this.smoothScroll.scrollToElement(this.viewport.nativeElement, target, options);
    };
    NgScrollbar.decorators = [
        { type: Component, args: [{
                    selector: 'ng-scrollbar',
                    exportAs: 'ngScrollbar',
                    template: "<div class=\"ng-scrollbar-wrapper\" [ngAttr]=\"state\">\r\n  <div class=\"ng-scroll-viewport-wrapper\"\r\n       (resizeSensor)=\"update()\"\r\n       [sensorDebounce]=\"sensorDebounce\"\r\n       [sensorDisabled]=\"sensorDisabled\">\r\n    <div scrollViewport\r\n         [style]=\"nativeScrollbarSizeFactory.nativeScrollbarSize | async | cssVariable: 'native-scrollbar-size'\">\r\n      <div>\r\n        <ng-content></ng-content>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <ng-container *ngIf=\"!disabled\">\r\n    <scrollbar-x *ngIf=\"state.horizontalUsed\"\r\n                 [attr.scrollable]=\"state.isHorizontallyScrollable\"\r\n                 [attr.fit]=\"state.verticalUsed\">\r\n    </scrollbar-x>\r\n    <scrollbar-y *ngIf=\"state.verticalUsed\"\r\n                 [attr.scrollable]=\"state.isVerticallyScrollable\"\r\n                 [attr.fit]=\"state.horizontalUsed\">\r\n    </scrollbar-y>\r\n  </ng-container>\r\n</div>\r\n\r\n",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: { '[class.ng-scrollbar]': 'true' },
                    styles: ["::ng-deep .ng-scrollbar-measure{left:0;overflow:scroll;position:fixed;top:-9999px}:host{--scrollbar-border-radius:7px;--scrollbar-padding:4px;--scrollbar-track-color:transparent;--scrollbar-thumb-color:rgba(0, 0, 0, 0.2);--scrollbar-thumb-hover-color:var(--scrollbar-thumb-color);--scrollbar-size:5px;--scrollbar-hover-size:var(--scrollbar-size);--scrollbar-thumb-transition:height ease-out 150ms,width ease-out 150ms;--scrollbar-track-transition:height ease-out 150ms,width ease-out 150ms;display:block;position:relative;height:100%;max-height:100%;max-width:100%}:host>.ng-scrollbar-wrapper{--scrollbar-total-size:calc(var(--scrollbar-size) + var(--scrollbar-padding) * 2);--vertical-scrollbar-size:var(--scrollbar-size);--horizontal-scrollbar-size:var(--scrollbar-size);--vertical-scrollbar-total-size:calc(var(--vertical-scrollbar-size) + var(--scrollbar-padding) * 2);--horizontal-scrollbar-total-size:calc(var(--horizontal-scrollbar-size) + var(--scrollbar-padding) * 2)}:host>.ng-scrollbar-wrapper[verticalDragging=true],:host>.ng-scrollbar-wrapper[verticalHovered=true]{--vertical-scrollbar-size:var(--scrollbar-hover-size);--vertical-scrollbar-total-size:calc(var(--vertical-scrollbar-size) + var(--scrollbar-padding) * 2);cursor:default}:host>.ng-scrollbar-wrapper[horizontalDragging=true],:host>.ng-scrollbar-wrapper[horizontalHovered=true]{--horizontal-scrollbar-size:var(--scrollbar-hover-size);--horizontal-scrollbar-total-size:calc(var(--horizontal-scrollbar-size) + var(--scrollbar-padding) * 2);cursor:default}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=ltr][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{left:0;right:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport{padding-right:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=rtl][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{left:var(--scrollbar-total-size);right:0}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport{padding-left:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=ltr][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=ltr][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{left:var(--scrollbar-total-size);right:0}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport{padding-left:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=rtl][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=rtl][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{left:0;right:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport{padding-right:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{top:0;bottom:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport{padding-bottom:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertAll][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertX][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{top:var(--scrollbar-total-size);bottom:0}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertAll][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertAll][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertX][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertX][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport{padding-top:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][horizontalUsed=true]>.ng-scroll-viewport-wrapper>.ng-native-scrollbar-hider{bottom:var(--native-scrollbar-size)}:host>.ng-scrollbar-wrapper[deactivated=false][verticalUsed=true]>.ng-scroll-viewport-wrapper>.ng-native-scrollbar-hider{left:0;right:var(--native-scrollbar-size)}:host>.ng-scrollbar-wrapper[deactivated=false][verticalUsed=true][dir=rtl]>.ng-scroll-viewport-wrapper>.ng-native-scrollbar-hider{right:0;left:var(--native-scrollbar-size)}:host>.ng-scrollbar-wrapper[deactivated=false][visibility=hover]>.scrollbar-control{opacity:0;transition-property:opacity;transition-duration:.4s;transition-delay:.8s}:host>.ng-scrollbar-wrapper[deactivated=false][visibility=hover]:active>.scrollbar-control,:host>.ng-scrollbar-wrapper[deactivated=false][visibility=hover]:focus>.scrollbar-control,:host>.ng-scrollbar-wrapper[deactivated=false][visibility=hover]:hover>.scrollbar-control{opacity:1;transition-duration:.4s;transition-delay:0s}:host>.ng-scrollbar-wrapper[horizontalUsed=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[horizontalUsed=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport{overflow-x:auto;overflow-y:hidden}:host>.ng-scrollbar-wrapper[verticalUsed=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[verticalUsed=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport{overflow-y:auto;overflow-x:hidden}:host>.ng-scrollbar-wrapper[verticalUsed=true][horizontalUsed=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[verticalUsed=true][horizontalUsed=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport{overflow:auto}.ng-scroll-viewport-wrapper{overflow:hidden}.ng-scroll-viewport{-webkit-overflow-scrolling:touch;contain:strict;will-change:scroll-position}::ng-deep .ng-scroll-content{position:relative!important;display:inline-block;min-width:100%}.ng-scroll-layer,.ng-scroll-viewport-wrapper,.ng-scrollbar-wrapper,::ng-deep .ng-scroll-viewport{position:absolute;left:0;right:0;top:0;bottom:0}", "::ng-deep .ng-scrollbar-wrapper[pointerEventsMethod=viewport]>.scrollbar-control{pointer-events:none}::ng-deep .ng-scrollbar-wrapper[horizontalDragging=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,::ng-deep .ng-scrollbar-wrapper[horizontalDragging=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,::ng-deep .ng-scrollbar-wrapper[scrollbarClicked=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,::ng-deep .ng-scrollbar-wrapper[scrollbarClicked=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,::ng-deep .ng-scrollbar-wrapper[verticalDragging=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,::ng-deep .ng-scrollbar-wrapper[verticalDragging=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}::ng-deep .ng-scrollbar-wrapper>.scrollbar-control{position:absolute;display:flex;justify-content:center;align-items:center;transition:var(--scrollbar-track-transition)}::ng-deep .ng-scrollbar-wrapper>.scrollbar-control[scrollable=false] .ng-scrollbar-thumb{display:none}::ng-deep .ng-scrollbar-track{height:100%;width:100%;z-index:1;border-radius:var(--scrollbar-border-radius);background-color:var(--scrollbar-track-color);overflow:hidden;transition:var(--scrollbar-track-transition);cursor:default}::ng-deep .ng-scrollbar-thumb{box-sizing:border-box;position:relative;border-radius:inherit;background-color:var(--scrollbar-thumb-color);transform:translateZ(0);transition:var(--scrollbar-thumb-transition)}"]
                }] }
    ];
    /** @nocollapse */
    NgScrollbar.ctorParameters = function () { return [
        { type: ElementRef },
        { type: NgZone },
        { type: ChangeDetectorRef },
        { type: Directionality },
        { type: SmoothScrollManager },
        { type: ScrollbarManager },
        { type: NativeScrollbarSizeFactory }
    ]; };
    NgScrollbar.propDecorators = {
        viewClass: [{ type: Input }],
        trackClass: [{ type: Input }],
        thumbClass: [{ type: Input }],
        minThumbSize: [{ type: Input }],
        trackClickScrollDuration: [{ type: Input }],
        pointerEventsDisabled: [{ type: Input }],
        pointerEventsMethod: [{ type: Input }],
        disabled: [{ type: Input }],
        track: [{ type: Input }],
        visibility: [{ type: Input }],
        appearance: [{ type: Input }],
        position: [{ type: Input }],
        sensorDebounce: [{ type: Input }],
        sensorDisabled: [{ type: Input }],
        scrollAuditTime: [{ type: Input }],
        updated: [{ type: Output }],
        defaultViewPort: [{ type: ViewChild, args: [ScrollViewport, { static: true },] }],
        customViewPort: [{ type: ContentChild, args: [ScrollViewport, { static: true },] }]
    };
    return NgScrollbar;
}());
export { NgScrollbar };
if (false) {
    /**
     * A class forwarded to scrollable viewport element
     * @type {?}
     */
    NgScrollbar.prototype.viewClass;
    /**
     * A class forwarded to the scrollbar track element
     * @type {?}
     */
    NgScrollbar.prototype.trackClass;
    /**
     * A class forwarded to the scrollbar thumb element
     * @type {?}
     */
    NgScrollbar.prototype.thumbClass;
    /**
     * Minimum scrollbar thumb size
     * @type {?}
     */
    NgScrollbar.prototype.minThumbSize;
    /**
     * The duration which the scrolling takes to reach its target when scrollbar rail is clicked
     * @type {?}
     */
    NgScrollbar.prototype.trackClickScrollDuration;
    /**
     * A flag used to enable/disable the scrollbar thumb dragged event
     * @type {?}
     */
    NgScrollbar.prototype.pointerEventsDisabled;
    /**
     * Sets the pointer events method
     * Use viewport pointer events  to handle dragging and track click (This makes scrolling work when mouse is over the scrollbar)
     * Use scrollbar pointer events to handle dragging and track click
     * @type {?}
     */
    NgScrollbar.prototype.pointerEventsMethod;
    /**
     * Disable custom scrollbar and switch back to native scrollbar
     * @type {?}
     */
    NgScrollbar.prototype.disabled;
    /**
     * Sets the supported scroll track of the viewport, there are 3 options:
     *
     * - `vertical` Use both vertical and horizontal scrollbar
     * - `horizontal` Use both vertical and horizontal scrollbar
     * - `all` Use both vertical and horizontal scrollbar
     * @type {?}
     */
    NgScrollbar.prototype.track;
    /**
     * When to show the scrollbar, and there are 3 options:
     *
     * - `native` (default) Scrollbar will be visible when viewport is scrollable like with native scrollbar
     * - `hover` Scrollbars are hidden by default, only visible on scrolling or hovering
     * - `always` Scrollbars are always shown even if the viewport is not scrollable
     * @type {?}
     */
    NgScrollbar.prototype.visibility;
    /**
     *  Sets the appearance of the scrollbar, there are 2 options:
     *
     * - `standard` (default) scrollbar space will be reserved just like with native scrollbar.
     * - `compact` scrollbar doesn't reserve any space, they are placed over the viewport.
     * @type {?}
     */
    NgScrollbar.prototype.appearance;
    /**
     * Sets the position of each scrollbar, there are 4 options:
     *
     * - `native` (Default) Use the default position like in native scrollbar.
     * - `invertY` Inverts vertical scrollbar position
     * - `invertX` Inverts Horizontal scrollbar position
     * - `invertAll` Inverts both scrollbar positions
     * @type {?}
     */
    NgScrollbar.prototype.position;
    /**
     * Debounce interval for detecting changes via ResizeObserver
     * @type {?}
     */
    NgScrollbar.prototype.sensorDebounce;
    /**
     * Whether ResizeObserver is disabled
     * @type {?}
     */
    NgScrollbar.prototype.sensorDisabled;
    /**
     * Scroll Audit Time
     * @type {?}
     */
    NgScrollbar.prototype.scrollAuditTime;
    /**
     * Steam that emits when scrollbar is updated
     * @type {?}
     */
    NgScrollbar.prototype.updated;
    /**
     * Default viewport reference
     * @type {?}
     * @private
     */
    NgScrollbar.prototype.defaultViewPort;
    /**
     * Custom viewport reference
     * @type {?}
     * @private
     */
    NgScrollbar.prototype.customViewPort;
    /**
     * Viewport Element
     * @type {?}
     */
    NgScrollbar.prototype.viewport;
    /**
     * Set of attributes added on the scrollbar wrapper
     * @type {?}
     */
    NgScrollbar.prototype.state;
    /**
     * Stream that destroys components' observables
     * @type {?}
     * @private
     */
    NgScrollbar.prototype.destroyed;
    /**
     * Stream that emits on scroll event
     * @type {?}
     */
    NgScrollbar.prototype.scrolled;
    /**
     * Steam that emits scroll event for vertical scrollbar
     * @type {?}
     */
    NgScrollbar.prototype.verticalScrolled;
    /**
     * Steam that emits scroll event for horizontal scrollbar
     * @type {?}
     */
    NgScrollbar.prototype.horizontalScrolled;
    /**
     * @type {?}
     * @private
     */
    NgScrollbar.prototype.el;
    /**
     * @type {?}
     * @private
     */
    NgScrollbar.prototype.zone;
    /**
     * @type {?}
     * @private
     */
    NgScrollbar.prototype.changeDetectorRef;
    /**
     * @type {?}
     * @private
     */
    NgScrollbar.prototype.dir;
    /**
     * @type {?}
     * @private
     */
    NgScrollbar.prototype.smoothScroll;
    /** @type {?} */
    NgScrollbar.prototype.manager;
    /** @type {?} */
    NgScrollbar.prototype.nativeScrollbarSizeFactory;
}
/**
 * @record
 */
function ScrollbarDragging() { }
if (false) {
    /** @type {?|undefined} */
    ScrollbarDragging.prototype.verticalDragging;
    /** @type {?|undefined} */
    ScrollbarDragging.prototype.horizontalDragging;
}
/**
 * @record
 */
function ScrollbarHovered() { }
if (false) {
    /** @type {?|undefined} */
    ScrollbarHovered.prototype.verticalHovered;
    /** @type {?|undefined} */
    ScrollbarHovered.prototype.horizontalHovered;
}
//# sourceMappingURL=data:application/json;base64,