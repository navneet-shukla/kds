import { Observable } from 'rxjs';
import { NgScrollbar } from '../../ng-scrollbar';
import { TrackAdapter } from '../track/track';
export declare abstract class ThumbAdapter {
    protected cmp: NgScrollbar;
    protected thumbElement: HTMLElement;
    protected document: any;
    track: TrackAdapter;
    private _dragging;
    dragging: Observable<boolean>;
    protected abstract readonly pageProperty: string;
    protected abstract readonly clientProperty: string;
    abstract readonly dragStartOffset: number;
    abstract readonly size: number;
    protected abstract readonly viewportScrollSize: number;
    protected abstract readonly viewportScrollOffset: number;
    abstract readonly viewportScrollMax: number;
    readonly trackMax: number;
    readonly clientRect: ClientRect;
    readonly clicked: Observable<any>;
    protected constructor(cmp: NgScrollbar, thumbElement: HTMLElement, document: any);
    update(): void;
    /**
     * Stream that emits the 'scrollTo' position when a scrollbar thumb element is dragged
     * This function is called by thumb drag event using viewport or scrollbar pointer events
     */
    dragged(event: any): Observable<number>;
    protected abstract setDragging(value: boolean): void;
    protected abstract scrollTo(position: number): void;
    protected abstract updateStyles(position: number, size: number): void;
    protected abstract handleDrag(position: number, scrollMax?: number): number;
    protected abstract handleDirection(position: number, scrollMax?: number): number;
}
