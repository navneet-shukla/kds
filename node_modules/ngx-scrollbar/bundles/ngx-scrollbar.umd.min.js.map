{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-scrollbar/lib/scrollbar/common.ts","ng://ngx-scrollbar/lib/scroll-viewport.ts","ng://ngx-scrollbar/lib/ng-scrollbar.model.ts","ng://ngx-scrollbar/lib/utils/scrollbar-manager.ts","ng://ngx-scrollbar/lib/utils/native-scrollbar-size-factory.ts","ng://ngx-scrollbar/lib/ng-scrollbar.ts","ng://ngx-scrollbar/lib/utils/css-variable.pipe.ts","ng://ngx-scrollbar/lib/utils/ng-attr.directive.ts","ng://ngx-scrollbar/lib/utils/resize-sensor.directive.ts","ng://ngx-scrollbar/lib/scrollbar/track/track.ts","ng://ngx-scrollbar/lib/scrollbar/thumb/thumb.ts","ng://ngx-scrollbar/lib/scrollbar/thumb/thumb.directive.ts","ng://ngx-scrollbar/lib/scrollbar/track/track.directive.ts","ng://ngx-scrollbar/lib/scrollbar/scrollbar.ts","ng://ngx-scrollbar/lib/scrollbar/scrollbar.component.ts","ng://ngx-scrollbar/lib/ng-scrollbar.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","preventSelection","doc","tap","onselectstart","enableSelection","stopPropagation","isWithinBounds","rect","clientX","left","width","clientY","top","height","ScrollViewport","viewPort","document","nativeElement","defineProperty","clientHeight","clientWidth","scrollHeight","scrollWidth","scrollTop","scrollLeft","contentWrapperElement","activatePointerEvents","destroyed","_this","hovered","Observable","observer","mouseMove","fromEvent","passive","pipe","mouseLeave","map","merge","takeUntil","subscribe","clicked","mouseDown","mouseUp","switchMap","setAsWrapper","className","firstElementChild","setAsViewport","customClassName","classList","add","scrollYTo","scrollXTo","Directive","args","selector","ElementRef","Inject","DOCUMENT","NG_SCROLLBAR_OPTIONS","InjectionToken","defaultOptions","viewClass","trackClass","thumbClass","track","appearance","visibility","position","pointerEventsMethod","trackClickScrollDuration","minThumbSize","windowResizeDebounce","sensorDebounce","scrollAuditTime","ScrollbarManager","options","globalOptions","rtlScrollAxisType","getRtlScrollAxisType","Injectable","providedIn","Optional","type","NativeScrollbarSizeFactory","manager","platform","isBrowser","of","_nativeScrollbarSize","BehaviorSubject","getNativeScrollbarSize","nativeScrollbarSize","asObservable","defaultView","debounceTime","ANDROID","IOS","box","createElement","body","appendChild","size","getBoundingClientRect","right","removeChild","Platform","NgScrollbar","el","zone","changeDetectorRef","dir","smoothScroll","nativeScrollbarSizeFactory","pointerEventsDisabled","disabled","sensorDisabled","updated","EventEmitter","state","Subject","updateState","verticalUsed","horizontalUsed","isVerticallyScrollable","isHorizontallyScrollable","viewport","_updateState","deactivated","detectChanges","getScrolledByDirection","property","event","scrolled","pluck","pairwise","filter","_a","_b","setHovered","run","setDragging","dragging","setClicked","scrollbarClicked","ngOnInit","runOutsideAngular","customViewPort","defaultViewPort","scrollStream","auditTime","verticalScrolled","horizontalScrolled","ngAfterViewChecked","ngOnDestroy","complete","update","style","contentHeight","scrollTo","scrollToElement","target","Component","exportAs","template","changeDetection","ChangeDetectionStrategy","OnPush","host","[class.ng-scrollbar]","NgZone","ChangeDetectorRef","Directionality","SmoothScrollManager","Input","Output","ViewChild","static","ContentChild","CssVariable","sanitizer","transform","variableName","bypassSecurityTrustStyle","Pipe","name","DomSanitizer","NgAttr","attrs","tslib_1.__values","entries","_c","_d","key","setAttribute","ResizeObserverFactory","resizeObserverSource","resizeObserverLoader","resizeObserverApi","ResizeObserver","from","import","module","catchError","console","log","EMPTY","ResizeSensor","resizeObserverFactory","scrollbar","_disabled","_subscription","resizeSensor","Error","_debounce","coerceNumberProperty","_subscribe","coerceBooleanProperty","_unsubscribe","ngAfterContentInit","_createObserver","_resizeObserver","observe","moduleObservable","stream","debounce","emit","disconnect","unsubscribe","TrackAdapter","cmp","trackElement","mouseup","mouseEnter","onTrackClicked","thumbSize","scrollSize","pageProperty","pageOffset","offset","mapToScrollToOption","duration","ThumbAdapter","thumbElement","_dragging","distinctUntilChanged","trackSize","contentSize","scrollPosition","scrollMax","trackMax","viewportScrollSize","Math","max","viewportScrollOffset","viewportScrollMax","animationFrameScheduler","schedule","updateStyles","handleDirection","dragged","trackMaxStart","scrollMaxStart","dragStart","capture","dragEnd","dragStartOffset","mergeMap","mouseDownOffset","clientProperty","mouseOffset","handleDrag","ThumbXDirective","element","_super","tslib_1.__extends","scrollMaxX","clientRect","RtlScrollAxisType","NEGATED","INVERTED","NORMAL","horizontalDragging","ThumbYDirective","scrollMaxY","verticalDragging","TrackXDirective","TrackYDirective","Scrollbar","thumbDragEvent","trackClickEvent","trackHoveredEvent","viewportTrackClicked","viewportThumbClicked","thumb","onUpdated","asyncScheduler","ScrollbarY","verticalHovered","[class.scrollbar-control]","ScrollbarX","horizontalHovered","thickness","NgScrollbarModule","NgModule","imports","CommonModule","BidiModule","PortalModule","PlatformModule","SmoothScrollModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { tap } from 'rxjs/operators';\r\n\r\nexport function preventSelection(doc: any) {\r\n  return tap(() => {\r\n    doc.onselectstart = () => false;\r\n  });\r\n}\r\n\r\nexport function enableSelection(doc: any) {\r\n  return tap(() => {\r\n    doc.onselectstart = null;\r\n  });\r\n}\r\n\r\nexport function stopPropagation() {\r\n  return tap((e: any) => e.stopPropagation());\r\n}\r\n\r\n/**\r\n * Check if pointer is within scrollbar bounds\r\n */\r\nexport function isWithinBounds(e: any, rect: ClientRect): boolean {\r\n  return (\r\n    e.clientX >= rect.left &&\r\n    e.clientX <= rect.left + rect.width &&\r\n    e.clientY >= rect.top &&\r\n    e.clientY <= rect.top + rect.height\r\n  );\r\n}\r\n","import { Directive, Inject, ElementRef } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { fromEvent, merge, Observable, Observer } from 'rxjs';\r\nimport { map, switchMap, takeUntil, tap } from 'rxjs/operators';\r\nimport { stopPropagation } from './scrollbar/common';\r\n\r\n@Directive({\r\n  selector: '[scrollViewport]'\r\n})\r\nexport class ScrollViewport {\r\n  // Viewport element\r\n  readonly nativeElement: HTMLElement;\r\n  // Content wrapper element\r\n  contentWrapperElement!: HTMLElement;\r\n\r\n  // Stream that emits when pointer event when the viewport is hovered and emits false value when isn't hovered\r\n  hovered!: Observable<boolean>;\r\n  // Stream that emits when viewport is clicked\r\n  clicked!: Observable<any>;\r\n\r\n  // Get viewport size, clientHeight or clientWidth\r\n  get clientHeight(): number {\r\n    return this.nativeElement.clientHeight;\r\n  }\r\n\r\n  get clientWidth(): number {\r\n    return this.nativeElement.clientWidth;\r\n  }\r\n\r\n  get scrollHeight(): number {\r\n    return this.nativeElement.scrollHeight;\r\n  }\r\n\r\n  get scrollWidth(): number {\r\n    return this.nativeElement.scrollWidth;\r\n  }\r\n\r\n  // Get viewport scroll offset, scrollTop or scrollLeft\r\n  get scrollTop(): number {\r\n    return this.nativeElement.scrollTop;\r\n  }\r\n\r\n  get scrollLeft(): number {\r\n    return this.nativeElement.scrollLeft;\r\n  }\r\n\r\n  // Get the available scrollable size\r\n  get scrollMaxX(): number {\r\n    return this.scrollWidth - this.clientWidth;\r\n  }\r\n\r\n  get scrollMaxY(): number {\r\n    return this.scrollHeight - this.clientHeight;\r\n  }\r\n\r\n  get contentHeight(): number {\r\n    return this.contentWrapperElement.clientHeight;\r\n  }\r\n\r\n  constructor(public viewPort: ElementRef,\r\n              @Inject(DOCUMENT) private document: any) {\r\n    this.nativeElement = viewPort.nativeElement;\r\n  }\r\n\r\n  /**\r\n   * Activate viewport pointer events such as 'hovered' and 'clicked' events\r\n   */\r\n  activatePointerEvents(destroyed: Observable<any>): void {\r\n    this.hovered = new Observable((observer: Observer<any>) => {\r\n      // Stream that emits when pointer is moved over the viewport (used to set the hovered state)\r\n      const mouseMove = fromEvent(this.nativeElement, 'mousemove', { passive: true }).pipe(stopPropagation());\r\n      // Stream that emits when pointer leaves the viewport (used to remove the hovered state)\r\n      const mouseLeave = fromEvent(this.nativeElement, 'mouseleave').pipe(map(() => false));\r\n      merge(mouseMove, mouseLeave).pipe(\r\n        tap((e: false | any) => observer.next(e)),\r\n        takeUntil(destroyed)\r\n      ).subscribe();\r\n    });\r\n\r\n    this.clicked = new Observable((observer: Observer<any>) => {\r\n      const mouseDown = fromEvent(this.nativeElement, 'mousedown', { passive: true }).pipe(\r\n        tap((e: any) => observer.next(e))\r\n      );\r\n      const mouseUp = fromEvent(this.nativeElement, 'mouseup', { passive: true }).pipe(\r\n        tap(() => observer.next(false))\r\n      );\r\n      mouseDown.pipe(\r\n        switchMap(() => mouseUp),\r\n        takeUntil(destroyed)\r\n      ).subscribe();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set this directive as a non-functional wrapper, called when a custom viewport is used\r\n   */\r\n  setAsWrapper(): void {\r\n    // In this case the default viewport and the default content wrapper will act as a mask\r\n    this.nativeElement.className = 'ng-native-scrollbar-hider ng-scroll-layer';\r\n    if (this.nativeElement.firstElementChild) {\r\n      this.nativeElement.firstElementChild.className = 'ng-scroll-layer';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set this directive as  the viewport, called when no custom viewport is used\r\n   */\r\n  setAsViewport(customClassName: string): void {\r\n    this.nativeElement.className = `ng-native-scrollbar-hider ng-scroll-viewport ${customClassName}`;\r\n    // Check if the custom viewport has only one child and set it as the content wrapper\r\n    if (this.nativeElement.firstElementChild) {\r\n      this.contentWrapperElement = this.nativeElement.firstElementChild as HTMLElement;\r\n      this.contentWrapperElement.classList.add('ng-scroll-content');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Scroll viewport vertically\r\n   */\r\n  scrollYTo(value: number): void {\r\n    this.nativeElement.scrollTop = value;\r\n  }\r\n\r\n  /**\r\n   * Scroll viewport horizontally\r\n   */\r\n  scrollXTo(value: number): void {\r\n    this.nativeElement.scrollLeft = value;\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport type ScrollbarAppearance = 'standard' | 'compact' | undefined;\r\nexport type ScrollbarTrack = 'vertical' | 'horizontal' | 'all' | undefined;\r\nexport type ScrollbarVisibility = 'hover' | 'always' | 'native' | undefined;\r\nexport type ScrollbarPosition = 'native' | 'invertY' | 'invertX' | 'invertAll' | undefined;\r\nexport type ScrollbarPointerEventsMethod = 'viewport' | 'scrollbar' | undefined;\r\n\r\nexport const NG_SCROLLBAR_OPTIONS = new InjectionToken<NgScrollbarOptions>('NG_SCROLLBAR_OPTIONS');\r\n\r\nexport interface NgScrollbarOptions {\r\n  /**\r\n   * Sets the scroll axis of the viewport, there are 3 options:\r\n   *\r\n   * - `vertical` Use both vertical and horizontal scrollbar-control\r\n   * - `horizontal` Use both vertical and horizontal scrollbar-control\r\n   * - `all` Use both vertical and horizontal scrollbar-control\r\n   */\r\n  track?: ScrollbarTrack;\r\n  /**\r\n   * When to show the scrollbar, and there are 3 options:\r\n   *\r\n   * - `native` (default) Scrollbar will be visible when viewport is scrollable like with native scrollbar-control\r\n   * - `hover` Scrollbars are hidden by default, only visible on scrolling or hovering\r\n   * - `always` Scrollbars are always shown even if the viewport is not scrollable\r\n   */\r\n  visibility?: ScrollbarVisibility;\r\n  /**\r\n   *  Sets the appearance of the scrollbar, there are 2 options:\r\n   *\r\n   * - `standard` (default) scrollbar space will be reserved just like with native scrollbar-control.\r\n   * - `compact` scrollbar doesn't reserve any space, they are placed over the viewport.\r\n   */\r\n  appearance?: ScrollbarAppearance;\r\n  /**\r\n   * Sets the position of each scrollbar, there are 4 options:\r\n   *\r\n   * - `native` (Default) Use the default position like in native scrollbar-control.\r\n   * - `invertY` Inverts vertical scrollbar position\r\n   * - `invertX` Inverts Horizontal scrollbar position\r\n   * - `invertAll` Inverts both scrollbar-control positions\r\n   */\r\n  position?: ScrollbarPosition;\r\n  /**\r\n   * Sets the pointer events method\r\n   * Use viewport pointer events  to handle dragging and track click (This makes scrolling work when mouse is over the scrollbar)\r\n   * Use scrollbar pointer events to handle dragging and track click\r\n   */\r\n  pointerEventsMethod?: ScrollbarPointerEventsMethod;\r\n  /** A class forwarded to scrollable viewport element */\r\n  viewClass?: string | undefined;\r\n  /** A class forwarded to the scrollbar track element */\r\n  trackClass?: string | undefined;\r\n  /** A class forwarded to the scrollbar thumb element */\r\n  thumbClass?: string | undefined;\r\n  /** The minimum scrollbar thumb size in px */\r\n  minThumbSize?: number | undefined;\r\n  /** The duration which the scrolling takes to reach its target when scrollbar rail is clicked */\r\n  trackClickScrollDuration?: number | undefined;\r\n  /** A flag used to enable/disable the scrollbar pointer events */\r\n  pointerEventsDisabled?: boolean | undefined;\r\n  /** Debounce interval for detecting changes via window.resize event */\r\n  windowResizeDebounce?: number | undefined;\r\n  /** Debounce interval for detecting changes via ResizeObserver */\r\n  sensorDebounce?: number | undefined;\r\n  /** Whether ResizeObserver is disabled */\r\n  sensorDisabled?: boolean | undefined;\r\n  /** Scroll Audit Time */\r\n  scrollAuditTime?: number | undefined;\r\n}\r\n\r\n/**\r\n * Set of attributes added on the scrollbar wrapper\r\n */\r\nexport interface NgScrollbarState {\r\n  position?: ScrollbarPosition;\r\n  track?: ScrollbarTrack;\r\n  appearance?: ScrollbarAppearance;\r\n  visibility?: ScrollbarVisibility;\r\n  deactivated?: boolean;\r\n  pointerEventsMethod?: ScrollbarPointerEventsMethod;\r\n  dir?: 'rtl' | 'ltr';\r\n  verticalUsed?: boolean;\r\n  horizontalUsed?: boolean;\r\n  isVerticallyScrollable?: boolean;\r\n  isHorizontallyScrollable?: boolean;\r\n  verticalHovered?: boolean;\r\n  horizontalHovered?: boolean;\r\n  verticalDragging?: boolean;\r\n  horizontalDragging?: boolean;\r\n  // Flag used to prevent text selection on content\r\n  scrollbarClicked?: boolean;\r\n}\r\n","import { Inject, Injectable, Optional } from '@angular/core';\r\nimport { getRtlScrollAxisType, RtlScrollAxisType } from '@angular/cdk/platform';\r\nimport { NG_SCROLLBAR_OPTIONS, NgScrollbarOptions } from '../ng-scrollbar.model';\r\n\r\nconst defaultOptions: NgScrollbarOptions = {\r\n  viewClass: '',\r\n  trackClass: '',\r\n  thumbClass: '',\r\n  track: 'vertical',\r\n  appearance: 'compact',\r\n  visibility: 'native',\r\n  position: 'native',\r\n  pointerEventsMethod: 'viewport',\r\n  trackClickScrollDuration: 300,\r\n  minThumbSize: 20,\r\n  windowResizeDebounce: 0,\r\n  sensorDebounce: 0,\r\n  scrollAuditTime: 0\r\n};\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ScrollbarManager {\r\n  readonly globalOptions: NgScrollbarOptions;\r\n\r\n  readonly rtlScrollAxisType: RtlScrollAxisType;\r\n\r\n  constructor(@Optional() @Inject(NG_SCROLLBAR_OPTIONS) options: NgScrollbarOptions) {\r\n    this.globalOptions = options ? { ...defaultOptions, ...options } : defaultOptions;\r\n\r\n    this.rtlScrollAxisType = getRtlScrollAxisType();\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { BehaviorSubject, fromEvent, Observable, of } from 'rxjs';\r\nimport { debounceTime, tap, switchMap } from 'rxjs/operators';\r\nimport { ScrollbarManager } from './scrollbar-manager';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class NativeScrollbarSizeFactory {\r\n  private _nativeScrollbarSize: BehaviorSubject<number>;\r\n  nativeScrollbarSize: Observable<number>;\r\n\r\n  constructor(@Inject(DOCUMENT) private document: any,\r\n              private manager: ScrollbarManager,\r\n              private platform: Platform) {\r\n    if (platform.isBrowser) {\r\n      of(null).pipe(\r\n        tap(() => this._nativeScrollbarSize = new BehaviorSubject<number>(this.getNativeScrollbarSize())),\r\n        tap(() => this.nativeScrollbarSize = this._nativeScrollbarSize.asObservable()),\r\n        switchMap(() => fromEvent(this.document.defaultView, 'resize', { passive: true })),\r\n        debounceTime(this.manager.globalOptions.windowResizeDebounce!),\r\n        tap(() => this._nativeScrollbarSize.next(this.getNativeScrollbarSize()))\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get native scrollbar size\r\n   */\r\n  private getNativeScrollbarSize(): number {\r\n    if (this.platform.ANDROID || this.platform.IOS) {\r\n      return 6;\r\n    }\r\n    const box = this.document.createElement('div');\r\n    box.className = 'ng-scrollbar-measure';\r\n    this.document.body.appendChild(box);\r\n    const size = box.getBoundingClientRect().right;\r\n    this.document.body.removeChild(box);\r\n    // if size is 0, return 15 (for MAC OS browsers)\r\n    return size || 15;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  ViewChild,\r\n  ContentChild,\r\n  OnInit,\r\n  AfterViewChecked,\r\n  OnDestroy,\r\n  NgZone,\r\n  ElementRef,\r\n  EventEmitter,\r\n  ChangeDetectorRef,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { Directionality } from '@angular/cdk/bidi';\r\nimport { fromEvent, Observable, Observer, Subject } from 'rxjs';\r\nimport { auditTime, filter, map, pairwise, pluck, takeUntil, tap } from 'rxjs/operators';\r\nimport { ScrollViewport } from './scroll-viewport';\r\nimport { SmoothScrollElement, SmoothScrollManager, SmoothScrollToOptions } from 'ngx-scrollbar/smooth-scroll';\r\n// Uncomment the following line in development mode\r\n//import { SmoothScrollElement, SmoothScrollManager, SmoothScrollToOptions } from '../../smooth-scroll/src/public_api';\r\nimport {\r\n  ScrollbarAppearance,\r\n  ScrollbarTrack,\r\n  ScrollbarPosition,\r\n  ScrollbarVisibility,\r\n  NgScrollbarState,\r\n  ScrollbarPointerEventsMethod\r\n} from './ng-scrollbar.model';\r\nimport { ScrollbarManager } from './utils/scrollbar-manager';\r\nimport { NativeScrollbarSizeFactory } from './utils/native-scrollbar-size-factory';\r\n\r\n@Component({\r\n  selector: 'ng-scrollbar',\r\n  exportAs: 'ngScrollbar',\r\n  templateUrl: 'ng-scrollbar.html',\r\n  styleUrls: ['ng-scrollbar.scss', 'scrollbar/shared.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  host: { '[class.ng-scrollbar]': 'true' }\r\n})\r\nexport class NgScrollbar implements OnInit, AfterViewChecked, OnDestroy {\r\n  /** A class forwarded to scrollable viewport element */\r\n  @Input() viewClass: string | undefined = this.manager.globalOptions.viewClass;\r\n  /** A class forwarded to the scrollbar track element */\r\n  @Input() trackClass: string | undefined = this.manager.globalOptions.trackClass;\r\n  /** A class forwarded to the scrollbar thumb element */\r\n  @Input() thumbClass: string | undefined = this.manager.globalOptions.thumbClass;\r\n  /** Minimum scrollbar thumb size */\r\n  @Input() minThumbSize: number | undefined = this.manager.globalOptions.minThumbSize;\r\n  /** The duration which the scrolling takes to reach its target when scrollbar rail is clicked */\r\n  @Input() trackClickScrollDuration: number | undefined = this.manager.globalOptions.trackClickScrollDuration;\r\n  /** A flag used to enable/disable the scrollbar thumb dragged event */\r\n  @Input() pointerEventsDisabled: boolean | undefined = this.manager.globalOptions.pointerEventsDisabled;\r\n  /**\r\n   * Sets the pointer events method\r\n   * Use viewport pointer events  to handle dragging and track click (This makes scrolling work when mouse is over the scrollbar)\r\n   * Use scrollbar pointer events to handle dragging and track click\r\n   */\r\n  @Input() pointerEventsMethod: ScrollbarPointerEventsMethod = this.manager.globalOptions.pointerEventsMethod;\r\n  /** Disable custom scrollbar and switch back to native scrollbar */\r\n  @Input() disabled: boolean = false;\r\n  /**\r\n   * Sets the supported scroll track of the viewport, there are 3 options:\r\n   *\r\n   * - `vertical` Use both vertical and horizontal scrollbar\r\n   * - `horizontal` Use both vertical and horizontal scrollbar\r\n   * - `all` Use both vertical and horizontal scrollbar\r\n   */\r\n  @Input() track: ScrollbarTrack = this.manager.globalOptions.track;\r\n  /**\r\n   * When to show the scrollbar, and there are 3 options:\r\n   *\r\n   * - `native` (default) Scrollbar will be visible when viewport is scrollable like with native scrollbar\r\n   * - `hover` Scrollbars are hidden by default, only visible on scrolling or hovering\r\n   * - `always` Scrollbars are always shown even if the viewport is not scrollable\r\n   */\r\n  @Input() visibility: ScrollbarVisibility = this.manager.globalOptions.visibility;\r\n  /**\r\n   *  Sets the appearance of the scrollbar, there are 2 options:\r\n   *\r\n   * - `standard` (default) scrollbar space will be reserved just like with native scrollbar.\r\n   * - `compact` scrollbar doesn't reserve any space, they are placed over the viewport.\r\n   */\r\n  @Input() appearance: ScrollbarAppearance = this.manager.globalOptions.appearance;\r\n  /**\r\n   * Sets the position of each scrollbar, there are 4 options:\r\n   *\r\n   * - `native` (Default) Use the default position like in native scrollbar.\r\n   * - `invertY` Inverts vertical scrollbar position\r\n   * - `invertX` Inverts Horizontal scrollbar position\r\n   * - `invertAll` Inverts both scrollbar positions\r\n   */\r\n  @Input() position: ScrollbarPosition = this.manager.globalOptions.position;\r\n  /** Debounce interval for detecting changes via ResizeObserver */\r\n  @Input() sensorDebounce: number | undefined = this.manager.globalOptions.sensorDebounce;\r\n  /** Whether ResizeObserver is disabled */\r\n  @Input() sensorDisabled: boolean | undefined = this.manager.globalOptions.sensorDisabled;\r\n  /** Scroll Audit Time */\r\n  @Input() scrollAuditTime: number | undefined = this.manager.globalOptions.scrollAuditTime;\r\n  /** Steam that emits when scrollbar is updated */\r\n  @Output() updated = new EventEmitter<void>();\r\n  /** Default viewport reference */\r\n  @ViewChild(ScrollViewport, { static: true }) private defaultViewPort: ScrollViewport;\r\n  /** Custom viewport reference */\r\n  @ContentChild(ScrollViewport, { static: true }) private customViewPort: ScrollViewport;\r\n  /** Viewport Element */\r\n  viewport: ScrollViewport;\r\n  /** Set of attributes added on the scrollbar wrapper */\r\n  state: NgScrollbarState = {};\r\n  /** Stream that destroys components' observables */\r\n  private destroyed = new Subject<void>();\r\n\r\n  /** Stream that emits on scroll event */\r\n  scrolled: Observable<any>;\r\n  /** Steam that emits scroll event for vertical scrollbar */\r\n  verticalScrolled: Observable<any>;\r\n  /** Steam that emits scroll event for horizontal scrollbar */\r\n  horizontalScrolled: Observable<any>;\r\n\r\n  get nativeElement(): HTMLElement {\r\n    return this.el.nativeElement;\r\n  }\r\n\r\n  constructor(\r\n    private el: ElementRef,\r\n    private zone: NgZone,\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private dir: Directionality,\r\n    private smoothScroll: SmoothScrollManager,\r\n    public manager: ScrollbarManager,\r\n    public nativeScrollbarSizeFactory: NativeScrollbarSizeFactory) {\r\n  }\r\n\r\n  /**\r\n   * Update local state with each change detection\r\n   */\r\n  private updateState() {\r\n    let verticalUsed: boolean = false;\r\n    let horizontalUsed: boolean = false;\r\n    let isVerticallyScrollable: boolean = false;\r\n    let isHorizontallyScrollable: boolean = false;\r\n\r\n    // Check if vertical scrollbar should be displayed\r\n    if (this.track === 'all' || this.track === 'vertical') {\r\n      isVerticallyScrollable = this.viewport.scrollHeight > this.viewport.clientHeight;\r\n      verticalUsed = this.visibility === 'always' || isVerticallyScrollable;\r\n    }\r\n    // Check if horizontal scrollbar should be displayed\r\n    if (this.track === 'all' || this.track === 'horizontal') {\r\n      isHorizontallyScrollable = this.viewport.scrollWidth > this.viewport.clientWidth;\r\n      horizontalUsed = this.visibility === 'always' || isHorizontallyScrollable;\r\n    }\r\n\r\n    // Update inner wrapper attributes\r\n    this._updateState({\r\n      position: this.position,\r\n      track: this.track,\r\n      appearance: this.appearance,\r\n      visibility: this.visibility,\r\n      deactivated: this.disabled,\r\n      dir: this.dir.value,\r\n      pointerEventsMethod: this.pointerEventsMethod,\r\n      verticalUsed,\r\n      horizontalUsed,\r\n      isVerticallyScrollable,\r\n      isHorizontallyScrollable\r\n    });\r\n  }\r\n\r\n  private _updateState(state: NgScrollbarState) {\r\n    this.state = { ...this.state, ...state };\r\n    this.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  private getScrolledByDirection(property: 'scrollLeft' | 'scrollTop') {\r\n    let event: any;\r\n    return this.scrolled.pipe(\r\n      tap((e: any) => event = e),\r\n      pluck('target', property),\r\n      pairwise(),\r\n      filter(([prev, curr]) => prev !== curr),\r\n      map(() => event)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set hovered state if a scrollbar is being hovered\r\n   */\r\n  setHovered(hovered: ScrollbarHovered) {\r\n    this.zone.run(() => this._updateState({ ...hovered }));\r\n  }\r\n\r\n  /**\r\n   * Set dragging state if a scrollbar is being dragged\r\n   */\r\n  setDragging(dragging: ScrollbarDragging) {\r\n    this.zone.run(() => this._updateState({ ...dragging }));\r\n  }\r\n\r\n  /**\r\n   * Set clicked state if a scrollbar track is being click\r\n   */\r\n  setClicked(scrollbarClicked: boolean) {\r\n    this.zone.run(() => this._updateState({ scrollbarClicked }));\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Set the viewport based on user choice\r\n    this.zone.runOutsideAngular(() => {\r\n      if (this.customViewPort) {\r\n        this.viewport = this.customViewPort;\r\n        this.defaultViewPort.setAsWrapper();\r\n      } else {\r\n        this.viewport = this.defaultViewPort;\r\n      }\r\n      // Activate the selected viewport\r\n      this.viewport.setAsViewport(this.viewClass!);\r\n\r\n      let scrollStream = fromEvent(this.viewport.nativeElement, 'scroll', { passive: true });\r\n      // Throttle scroll event if 'scrollAuditTime' is set\r\n      scrollStream = this.scrollAuditTime ? scrollStream.pipe(auditTime(this.scrollAuditTime)) : scrollStream;\r\n      // Initialize scroll streams\r\n      this.scrolled = new Observable((observer: Observer<any>) =>\r\n        scrollStream.pipe(takeUntil(this.destroyed)).subscribe(observer)\r\n      );\r\n      this.verticalScrolled = this.getScrolledByDirection('scrollTop');\r\n      this.horizontalScrolled = this.getScrolledByDirection('scrollLeft');\r\n    });\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.updateState();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed.next();\r\n    this.destroyed.complete();\r\n  }\r\n\r\n  /**\r\n   * Update local state and the internal scrollbar controls\r\n   */\r\n  update() {\r\n    if (!this.state.horizontalUsed) {\r\n      // Auto-height: Set component height to content height\r\n      this.nativeElement.style.height = `${this.viewport.contentHeight}px`;\r\n    }\r\n    this.updated.next();\r\n    this.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  /**\r\n   * Smooth scroll functions\r\n   */\r\n  scrollTo(options: SmoothScrollToOptions): Promise<void> {\r\n    return this.smoothScroll.scrollTo(this.viewport.nativeElement, options);\r\n  }\r\n\r\n  /**\r\n   * Scroll to element by reference or selector\r\n   */\r\n  scrollToElement(target: SmoothScrollElement, options?): Promise<void> {\r\n    return this.smoothScroll.scrollToElement(this.viewport.nativeElement, target, options);\r\n  }\r\n}\r\n\r\ninterface ScrollbarDragging {\r\n  verticalDragging?: boolean;\r\n  horizontalDragging?: boolean;\r\n}\r\n\r\ninterface ScrollbarHovered {\r\n  verticalHovered?: boolean;\r\n  horizontalHovered?: boolean;\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'cssVariable'\r\n})\r\nexport class CssVariable implements PipeTransform {\r\n\r\n  transform(size: number | null, variableName: string | null): SafeHtml {\r\n    if (size === null) {\r\n      size = 0;\r\n    }\r\n\r\n    return this.sanitizer.bypassSecurityTrustStyle(`--${variableName}: -${size}px`);\r\n  }\r\n\r\n  constructor(private sanitizer: DomSanitizer) {\r\n  }\r\n}\r\n","import { Directive, ElementRef, Input } from '@angular/core';\r\nimport { NgScrollbarState } from '../ng-scrollbar.model';\r\n\r\n@Directive({ selector: '[ngAttr]' })\r\nexport class NgAttr {\r\n\r\n  constructor(private el: ElementRef) {\r\n  }\r\n\r\n  @Input() set ngAttr(attrs: NgScrollbarState) {\r\n    for (const [key, value] of Object.entries(attrs)) {\r\n      (this.el.nativeElement as HTMLElement).setAttribute(key, value);\r\n    }\r\n  }\r\n}\r\n","import { Directive, Input, Injectable, Inject, AfterContentInit, OnDestroy, NgZone, Output, EventEmitter } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\r\nimport { from, of, EMPTY, BehaviorSubject, Observable, Subscription, Observer } from 'rxjs';\r\nimport { catchError, debounceTime, map, switchMap } from 'rxjs/operators';\r\nimport { NgScrollbar } from '../ng-scrollbar';\r\n\r\n/**\r\n * Factory that initialize the ResizeObserver if available in the browser\r\n * Otherwise, it lazy-loads the ResizeObserver polyfill\r\n */\r\n@Injectable({ providedIn: 'root' })\r\nexport class ResizeObserverFactory {\r\n  private readonly resizeObserverSource = new BehaviorSubject<any>(null);\r\n  readonly resizeObserverLoader = this.resizeObserverSource.asObservable();\r\n\r\n  constructor(@Inject(DOCUMENT) document: any, platform: Platform) {\r\n    if (platform.isBrowser) {\r\n      const resizeObserverApi = document.defaultView.ResizeObserver\r\n        ? of(document.defaultView.ResizeObserver)\r\n        : from(import('@juggle/resize-observer')).pipe(\r\n          map((module: { ResizeObserver: any }) => module.ResizeObserver),\r\n          catchError((e) => {\r\n            console.log('Unable to load ResizeObserver polyfill', e);\r\n            return EMPTY;\r\n          }));\r\n      this.resizeObserverSource.next(resizeObserverApi);\r\n    }\r\n  }\r\n}\r\n\r\n@Directive({ selector: '[resizeSensor]' })\r\nexport class ResizeSensor implements AfterContentInit, OnDestroy {\r\n\r\n  /** Debounce interval for emitting the changes. */\r\n  @Input('sensorDebounce')\r\n  get debounce(): number {\r\n    return this._debounce;\r\n  }\r\n\r\n  set debounce(value: number) {\r\n    this._debounce = coerceNumberProperty(value);\r\n    this._subscribe();\r\n  }\r\n\r\n  private _debounce: number;\r\n\r\n  /** Whether ResizeObserver is disabled. */\r\n  @Input('sensorDisabled')\r\n  get disabled() {\r\n    return this._disabled;\r\n  }\r\n\r\n  set disabled(value: any) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n    this._disabled ? this._unsubscribe() : this._subscribe();\r\n  }\r\n\r\n  private _disabled: boolean = false;\r\n\r\n  private _subscription: Subscription | null = null;\r\n  private _resizeObserver: any;\r\n\r\n  @Output() resizeSensor = new EventEmitter<void>();\r\n\r\n  constructor(private zone: NgZone,\r\n              private platform: Platform,\r\n              private resizeObserverFactory: ResizeObserverFactory,\r\n              private scrollbar: NgScrollbar) {\r\n    if (!scrollbar) {\r\n      throw new Error('[NgScrollbar Resize Sensor Directive]: Host element must be an NgScrollbar component.');\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    if (!this._subscription && !this._disabled) {\r\n      this._subscribe();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._unsubscribe();\r\n  }\r\n\r\n  private _createObserver(ResizeObserver: any): Observable<void> {\r\n    return new Observable((observer: Observer<void>) => {\r\n      this._resizeObserver = new ResizeObserver(() => observer.next());\r\n      this._resizeObserver.observe(this.scrollbar.viewport.nativeElement);\r\n      if (this.scrollbar.viewport.contentWrapperElement) {\r\n        this._resizeObserver.observe(this.scrollbar.viewport.contentWrapperElement);\r\n      }\r\n    });\r\n  }\r\n\r\n  private _subscribe() {\r\n    this._unsubscribe();\r\n    if (this.platform.isBrowser) {\r\n      this.zone.runOutsideAngular(() => {\r\n        this._subscription = this.resizeObserverFactory.resizeObserverLoader.pipe(\r\n          switchMap((moduleObservable: Observable<any>) => moduleObservable),\r\n          switchMap((ResizeObserver: any) => {\r\n            if (ResizeObserver) {\r\n              const stream = this._createObserver(ResizeObserver);\r\n              return this.debounce ? stream.pipe(debounceTime(this._debounce)) : stream;\r\n            } else {\r\n              return EMPTY;\r\n            }\r\n          })\r\n        ).subscribe(() => this.resizeSensor.emit());\r\n      });\r\n    }\r\n  }\r\n\r\n  private _unsubscribe() {\r\n    if (this._resizeObserver) {\r\n      this._resizeObserver.disconnect();\r\n    }\r\n    if (this._subscription) {\r\n      this._subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { coerceNumberProperty } from '@angular/cdk/coercion';\r\nimport { EMPTY, fromEvent, merge, Observable, of } from 'rxjs';\r\nimport { map, pluck, switchMap, tap } from 'rxjs/operators';\r\nimport { preventSelection, enableSelection, stopPropagation } from '../common';\r\nimport { NgScrollbar } from '../../ng-scrollbar';\r\n\r\nexport abstract class TrackAdapter {\r\n\r\n  // Stream that emits when the track element is clicked\r\n  get clicked(): Observable<any> {\r\n    const mouseDown = fromEvent(this.trackElement, 'mousedown', { passive: true }).pipe(\r\n      stopPropagation(),\r\n      preventSelection(this.document)\r\n    );\r\n    const mouseup = fromEvent(this.document, 'mouseup', { passive: true }).pipe(\r\n      stopPropagation(),\r\n      enableSelection(this.document),\r\n      switchMap(() => EMPTY)\r\n    );\r\n    return merge(mouseDown, mouseup);\r\n  }\r\n\r\n  // Stream that emits when the track element is hovered\r\n  get hovered(): Observable<boolean> {\r\n    const mouseEnter = fromEvent(this.trackElement, 'mouseenter', { passive: true }).pipe(\r\n      stopPropagation(),\r\n      map(() => true)\r\n    );\r\n    const mouseLeave = fromEvent(this.trackElement, 'mouseleave', { passive: true }).pipe(\r\n      stopPropagation(),\r\n      map(() => false)\r\n    );\r\n    return merge(mouseEnter, mouseLeave);\r\n  }\r\n\r\n  // Returns either 'pageX' or 'pageY' according to scrollbar axis\r\n  abstract get pageProperty(): string;\r\n\r\n  // Returns the track size, clientHeight or clientWidth\r\n  abstract get size(): number;\r\n\r\n  // Returns the start offset either 'clientRect.top' or 'clientRect.left'\r\n  abstract get offset(): number;\r\n\r\n  // Get track client rect\r\n  get clientRect(): ClientRect {\r\n    return this.trackElement.getBoundingClientRect();\r\n  }\r\n\r\n  protected constructor(protected cmp: NgScrollbar,\r\n                        protected trackElement: HTMLElement,\r\n                        protected document: any) {\r\n  }\r\n\r\n  /**\r\n   * Stream that emits when scrollbar track is clicked\r\n   */\r\n  onTrackClicked(e: any, thumbSize: number, scrollSize: number): Observable<any> {\r\n    return of(e).pipe(\r\n      pluck(this.pageProperty),\r\n      // Calculate scrollTo position\r\n      map((pageOffset: number) => {\r\n        const clickOffset = pageOffset - this.offset;\r\n        const offset = clickOffset - (thumbSize / 2);\r\n        const ratio = offset / this.size;\r\n        return ratio * scrollSize;\r\n      }),\r\n      // Smooth scroll to position\r\n      tap((value: number) => {\r\n        this.cmp.scrollTo({\r\n          ...this.mapToScrollToOption(value),\r\n          duration: coerceNumberProperty(this.cmp.trackClickScrollDuration)\r\n        });\r\n      })\r\n    );\r\n  }\r\n\r\n  protected abstract mapToScrollToOption(value: number): ScrollToOptions;\r\n}\r\n","import { Input, Output } from '@angular/core';\r\nimport { animationFrameScheduler, of, fromEvent, Observable, Subject } from 'rxjs';\r\nimport { distinctUntilChanged, map, mergeMap, pluck, takeUntil, tap } from 'rxjs/operators';\r\nimport { enableSelection, preventSelection, stopPropagation } from '../common';\r\nimport { NgScrollbar } from '../../ng-scrollbar';\r\nimport { TrackAdapter } from '../track/track';\r\n\r\nexport abstract class ThumbAdapter {\r\n\r\n  @Input() track: TrackAdapter;\r\n\r\n  // Stream that emits dragging state\r\n  private _dragging = new Subject<boolean>();\r\n  @Output() dragging = this._dragging.pipe(distinctUntilChanged());\r\n\r\n  // Returns either 'pageX' or 'pageY' according to scrollbar axis\r\n  protected abstract get pageProperty(): string;\r\n\r\n  // Returns either 'clientHeight' or 'clientWidth' according to scrollbar axis\r\n  protected abstract get clientProperty(): string;\r\n\r\n  abstract get dragStartOffset(): number;\r\n\r\n  // Returns thumb size, clientHeight or clientWidth\r\n  abstract get size(): number;\r\n\r\n  protected abstract get viewportScrollSize(): number;\r\n\r\n  protected abstract get viewportScrollOffset(): number;\r\n\r\n  abstract get viewportScrollMax(): number;\r\n\r\n  get trackMax(): number {\r\n    return this.track.size - this.size;\r\n  }\r\n\r\n  // Get thumb client rect\r\n  get clientRect(): ClientRect {\r\n    return this.thumbElement.getBoundingClientRect();\r\n  }\r\n\r\n  // Stream that emits when scrollbar thumb is clicked\r\n  get clicked(): Observable<any> {\r\n    return fromEvent(this.thumbElement, 'mousedown', { passive: true }).pipe(stopPropagation());\r\n  }\r\n\r\n  protected constructor(protected cmp: NgScrollbar,\r\n                        protected thumbElement: HTMLElement,\r\n                        protected document: any) {\r\n  }\r\n\r\n  // Calculate and update thumb position and size\r\n  update() {\r\n    const size = calculateThumbSize(this.track.size, this.viewportScrollSize, this.cmp.minThumbSize!);\r\n    const position = calculateThumbPosition(this.viewportScrollOffset, this.viewportScrollMax, this.trackMax);\r\n    animationFrameScheduler.schedule(() => this.updateStyles(this.handleDirection(position, this.trackMax), size));\r\n  }\r\n\r\n  /**\r\n   * Stream that emits the 'scrollTo' position when a scrollbar thumb element is dragged\r\n   * This function is called by thumb drag event using viewport or scrollbar pointer events\r\n   */\r\n  dragged(event: any): Observable<number> {\r\n    let trackMaxStart: number;\r\n    let scrollMaxStart: number;\r\n\r\n    const dragStart = of(event).pipe(\r\n      preventSelection(this.document),\r\n      tap(() => {\r\n        // Capture scrollMax and trackMax once\r\n        trackMaxStart = this.trackMax;\r\n        scrollMaxStart = this.viewportScrollMax;\r\n        this.setDragging(true);\r\n      }),\r\n    );\r\n\r\n    const dragging = fromEvent(this.document, 'mousemove', { capture: true, passive: true }).pipe(stopPropagation());\r\n\r\n    const dragEnd = fromEvent(this.document, 'mouseup', { capture: true }).pipe(\r\n      stopPropagation(),\r\n      enableSelection(this.document),\r\n      tap(() => this.setDragging(false))\r\n    );\r\n\r\n    return dragStart.pipe(\r\n      pluck(this.pageProperty),\r\n      map((pageOffset: number) => pageOffset - this.dragStartOffset),\r\n      mergeMap((mouseDownOffset: number) => dragging.pipe(\r\n        pluck(this.clientProperty),\r\n        // Calculate how far the pointer is from the top/left of the scrollbar (minus the dragOffset).\r\n        map((mouseOffset: number) => mouseOffset - this.track.offset),\r\n        map((offset: number) => scrollMaxStart * (offset - mouseDownOffset) / trackMaxStart),\r\n        map((position: number) => this.handleDrag(position, scrollMaxStart)),\r\n        tap((position: number) => this.scrollTo(position)),\r\n        takeUntil(dragEnd)\r\n      ))\r\n    );\r\n  }\r\n\r\n  // Set dragging state\r\n  protected abstract setDragging(value: boolean): void;\r\n\r\n  // Scroll viewport instantly\r\n  protected abstract scrollTo(position: number): void;\r\n\r\n  // Update thumb element size and position\r\n  protected abstract updateStyles(position: number, size: number): void;\r\n\r\n  // Handle dragging position (Support LTR and RTL directions for the horizontal scrollbar)\r\n  protected abstract handleDrag(position: number, scrollMax?: number): number;\r\n\r\n  // Handle scrolling position (Support LTR and RTL directions for the horizontal scrollbar)\r\n  protected abstract handleDirection(position: number, scrollMax?: number): number;\r\n}\r\n\r\n/**\r\n * Calculate scrollbar thumb size\r\n */\r\nfunction calculateThumbSize(trackSize: number, contentSize: number, minThumbSize: number): number {\r\n  const scrollbarRatio = trackSize / contentSize;\r\n  const thumbSize = scrollbarRatio * trackSize;\r\n  return Math.max(~~thumbSize, minThumbSize);\r\n}\r\n\r\n/**\r\n * Calculate scrollbar thumb position\r\n */\r\nfunction calculateThumbPosition(scrollPosition: number, scrollMax: number, trackMax: number): number {\r\n  return scrollPosition * trackMax / scrollMax;\r\n}\r\n","import { Directive, Inject, ElementRef } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { RtlScrollAxisType } from '@angular/cdk/platform';\r\nimport { Directionality } from '@angular/cdk/bidi';\r\nimport { NgScrollbar } from '../../ng-scrollbar';\r\nimport { ThumbAdapter } from './thumb';\r\n\r\n@Directive({ selector: '[scrollbarThumbX]' })\r\nexport class ThumbXDirective extends ThumbAdapter {\r\n\r\n  protected get clientProperty(): string {\r\n    return 'clientX';\r\n  }\r\n\r\n  protected get pageProperty(): string {\r\n    return 'pageX';\r\n  }\r\n\r\n  protected get viewportScrollSize(): number {\r\n    return this.cmp.viewport.scrollWidth;\r\n  }\r\n\r\n  protected get viewportScrollOffset(): number {\r\n    return this.cmp.viewport.scrollLeft;\r\n  }\r\n\r\n  get viewportScrollMax(): number {\r\n    return this.cmp.viewport.scrollMaxX;\r\n  }\r\n\r\n  get dragStartOffset(): number {\r\n    return this.clientRect.left;\r\n  }\r\n\r\n  get size(): number {\r\n    return this.thumbElement.clientWidth;\r\n  }\r\n\r\n  constructor(protected cmp: NgScrollbar,\r\n              protected element: ElementRef,\r\n              @Inject(DOCUMENT) protected document: any,\r\n              protected dir: Directionality) {\r\n    super(cmp, element.nativeElement, document);\r\n  }\r\n\r\n  protected updateStyles(position: number, size: number) {\r\n    this.thumbElement.style.width = `${size}px`;\r\n    this.thumbElement.style.transform = `translate3d(${position}px, 0, 0)`;\r\n  }\r\n\r\n  protected handleDrag(position: number, scrollMax: number): number {\r\n    if (this.dir.value === 'rtl') {\r\n      if (this.cmp.manager.rtlScrollAxisType === RtlScrollAxisType.NEGATED) {\r\n        return position - scrollMax;\r\n      }\r\n      if (this.cmp.manager.rtlScrollAxisType === RtlScrollAxisType.INVERTED) {\r\n        return scrollMax - position;\r\n      }\r\n      // Keeping this as a memo\r\n      // if (this.rtlScrollAxisType === RtlScrollAxisType.NORMAL) {\r\n      //   return position;\r\n      // }\r\n    }\r\n    return position;\r\n  }\r\n\r\n  protected handleDirection(position: number, trackMax: number): number {\r\n    if (this.dir.value === 'rtl') {\r\n      if (this.cmp.manager.rtlScrollAxisType === RtlScrollAxisType.INVERTED) {\r\n        return -position;\r\n      }\r\n      if (this.cmp.manager.rtlScrollAxisType === RtlScrollAxisType.NORMAL) {\r\n        return position - trackMax;\r\n      }\r\n      // Keeping this as a memo\r\n      // if (this.rtlScrollAxisType === RtlScrollAxisType.NEGATED) {\r\n      //   return position;\r\n      // }\r\n    }\r\n    return position;\r\n  }\r\n\r\n  protected setDragging(value: boolean): void {\r\n    this.cmp.setDragging({ horizontalDragging: value });\r\n  }\r\n\r\n  protected scrollTo(position: number): void {\r\n    this.cmp.viewport.scrollXTo(position);\r\n  }\r\n}\r\n\r\n@Directive({ selector: '[scrollbarThumbY]' })\r\nexport class ThumbYDirective extends ThumbAdapter {\r\n\r\n  protected get pageProperty(): string {\r\n    return 'pageY';\r\n  }\r\n\r\n  protected get viewportScrollSize(): number {\r\n    return this.cmp.viewport.scrollHeight;\r\n  }\r\n\r\n  protected get viewportScrollOffset(): number {\r\n    return this.cmp.viewport.scrollTop;\r\n  }\r\n\r\n  get viewportScrollMax(): number {\r\n    return this.cmp.viewport.scrollMaxY;\r\n  }\r\n\r\n  protected get clientProperty(): string {\r\n    return 'clientY';\r\n  }\r\n\r\n  get dragStartOffset(): number {\r\n    return this.clientRect.top;\r\n  }\r\n\r\n  get size(): number {\r\n    return this.thumbElement.clientHeight;\r\n  }\r\n\r\n  constructor(protected cmp: NgScrollbar,\r\n              protected element: ElementRef,\r\n              @Inject(DOCUMENT) protected document: any) {\r\n    super(cmp, element.nativeElement, document);\r\n  }\r\n\r\n\r\n  protected updateStyles(position: number, size: number): void {\r\n    this.thumbElement.style.height = `${size}px`;\r\n    this.thumbElement.style.transform = `translate3d(0px, ${position}px, 0)`;\r\n  }\r\n\r\n  protected handleDrag(position: number): number {\r\n    return position;\r\n  }\r\n\r\n  protected handleDirection(position: number): number {\r\n    return position;\r\n  }\r\n\r\n  protected setDragging(value: boolean): void {\r\n    this.cmp.setDragging({ verticalDragging: value });\r\n  }\r\n\r\n  protected scrollTo(position: number): void {\r\n    this.cmp.viewport.scrollYTo(position);\r\n  }\r\n}\r\n","import { Directive, ElementRef, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { TrackAdapter } from './track';\nimport { NgScrollbar } from '../../ng-scrollbar';\n\n@Directive({ selector: '[scrollbarTrackX]' })\nexport class TrackXDirective extends TrackAdapter {\n\n  get pageProperty(): string {\n    return 'pageX';\n  }\n\n  get offset(): number {\n    return this.clientRect.left;\n  }\n\n  get size(): number {\n    return this.trackElement.clientWidth;\n  }\n\n  constructor(protected cmp: NgScrollbar, trackElement: ElementRef, @Inject(DOCUMENT) protected document: any) {\n    super(cmp, trackElement.nativeElement, document);\n  }\n\n  protected mapToScrollToOption(value: number): ScrollToOptions {\n    return { left: value };\n  }\n}\n\n@Directive({ selector: '[scrollbarTrackY]' })\nexport class TrackYDirective extends TrackAdapter {\n\n  get pageProperty(): string {\n    return 'pageY';\n  }\n\n  get offset(): number {\n    return this.clientRect.top;\n  }\n\n  get size(): number {\n    return this.trackElement.clientHeight;\n  }\n\n  constructor(protected cmp: NgScrollbar, trackElement: ElementRef, @Inject(DOCUMENT) protected document: any) {\n    super(cmp, trackElement.nativeElement, document);\n  }\n\n  protected mapToScrollToOption(value: number): ScrollToOptions {\n    return { top: value };\n  }\n}\n","import { OnDestroy, OnInit, NgZone } from '@angular/core';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { asyncScheduler, EMPTY, merge, Observable, Subject } from 'rxjs';\r\nimport { distinctUntilChanged, map, switchMap, takeUntil, tap } from 'rxjs/operators';\r\nimport { NgScrollbar } from '../ng-scrollbar';\r\nimport { ThumbAdapter } from './thumb/thumb';\r\nimport { TrackAdapter } from './track/track';\r\nimport { isWithinBounds } from './common';\r\n\r\nexport abstract class Scrollbar implements OnInit, OnDestroy {\r\n\r\n  // Thumb directive reference\r\n  readonly thumb: ThumbAdapter;\r\n  // Track directive reference\r\n  readonly track: TrackAdapter;\r\n  // Stream that emits to unsubscribe from all streams\r\n  protected readonly destroyed = new Subject<void>();\r\n\r\n  /**\r\n   * Viewport pointer events\r\n   * The following streams are only activated when (pointerEventsMethod === 'viewport')\r\n   */\r\n  protected viewportTrackClicked!: Subject<any>;\r\n  protected viewportThumbClicked!: Subject<any>;\r\n\r\n  protected abstract get viewportScrollSize(): number;\r\n\r\n  protected constructor(public cmp: NgScrollbar, protected platform: Platform, protected document: any, protected zone: NgZone) {\r\n  }\r\n\r\n  /**\r\n   * Activate scrollbar pointer events\r\n   */\r\n  private activatePointerEvents(): Observable<any> {\r\n    // Stream that emits when scrollbar thumb is dragged\r\n    let thumbDragEvent: Observable<any> = EMPTY;\r\n    // Stream that emits when scrollbar track is clicked\r\n    let trackClickEvent: Observable<any> = EMPTY;\r\n    // Stream that emits when scrollbar track is hovered\r\n    let trackHoveredEvent: Observable<any> = EMPTY;\r\n\r\n    // Set the method used for the pointer events option\r\n    if (this.cmp.pointerEventsMethod === 'viewport') {\r\n      // Pointer events using the viewport\r\n      this.viewportTrackClicked = new Subject<any>();\r\n      this.viewportThumbClicked = new Subject<any>();\r\n\r\n      // Activate the pointer events of the viewport directive\r\n      this.cmp.viewport.activatePointerEvents(this.destroyed);\r\n\r\n      // Set streams\r\n      thumbDragEvent = this.viewportThumbClicked;\r\n      trackClickEvent = this.viewportTrackClicked;\r\n      trackHoveredEvent = this.cmp.viewport.hovered.pipe(\r\n        // Check if track is hovered\r\n        map((e: any) => isWithinBounds(e, this.track.clientRect)),\r\n        distinctUntilChanged(),\r\n        // Enable / disable text selection\r\n        tap((hovered: boolean) => this.document.onselectstart = hovered ? () => false : null)\r\n      );\r\n\r\n      this.cmp.viewport.clicked.pipe(\r\n        tap((e: any) => {\r\n          if (e) {\r\n            if (isWithinBounds(e, this.thumb.clientRect)) {\r\n              this.viewportThumbClicked.next(e);\r\n            } else if (isWithinBounds(e, this.track.clientRect)) {\r\n              this.cmp.setClicked(true);\r\n              this.viewportTrackClicked.next(e);\r\n            }\r\n          } else {\r\n            this.cmp.setClicked(false);\r\n          }\r\n        }),\r\n        takeUntil(this.destroyed)\r\n      ).subscribe();\r\n    } else {\r\n      // Pointer events method is using 'scrollbar'\r\n      thumbDragEvent = this.thumb.clicked;\r\n      trackClickEvent = this.track.clicked;\r\n      trackHoveredEvent = this.track.hovered;\r\n    }\r\n\r\n    return merge(\r\n      // Activate scrollbar hovered event\r\n      trackHoveredEvent.pipe(tap((e: boolean) => this.setHovered(e))),\r\n      // Activate scrollbar thumb drag event\r\n      thumbDragEvent.pipe(switchMap((e: any) => this.thumb.dragged(e))),\r\n      // Activate scrollbar track click event\r\n      trackClickEvent.pipe(switchMap((e: any) => this.track.onTrackClicked(e, this.thumb.size, this.viewportScrollSize)))\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.zone.runOutsideAngular(() => {\r\n      // Activate pointer events on Desktop only\r\n      if (!(this.platform.IOS || this.platform.ANDROID) && !this.cmp.pointerEventsDisabled) {\r\n        this.activatePointerEvents().pipe(takeUntil(this.destroyed)).subscribe();\r\n      }\r\n\r\n      // Stream that emits when host component is updated\r\n      const updated = this.cmp.updated.pipe(tap(() => this.onUpdated()));\r\n\r\n      // Update scrollbar thumb when viewport is scrolled and when scrollbar component is updated\r\n      merge(this.cmp.scrolled, updated).pipe(\r\n        tap(() => this.thumb.update()),\r\n        takeUntil(this.destroyed)\r\n      ).subscribe();\r\n\r\n      // Initialize scrollbar\r\n      asyncScheduler.schedule(() => this.thumb.update(), 100);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed.next();\r\n    this.destroyed.complete();\r\n\r\n    // Clean up viewport streams if used\r\n    if (this.viewportThumbClicked && this.viewportTrackClicked) {\r\n      this.viewportTrackClicked.complete();\r\n      this.viewportThumbClicked.complete();\r\n    }\r\n  }\r\n\r\n  protected abstract setHovered(value: boolean): void;\r\n\r\n  protected abstract onUpdated(): void;\r\n}\r\n","import { Component, Inject, NgZone, ChangeDetectionStrategy, ElementRef, ViewChild } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { TrackXDirective, TrackYDirective } from './track/track.directive';\r\nimport { ThumbXDirective, ThumbYDirective } from './thumb/thumb.directive';\r\nimport { NgScrollbar } from '../ng-scrollbar';\r\nimport { Scrollbar } from './scrollbar';\r\n\r\n@Component({\r\n  selector: 'scrollbar-y',\r\n  host: { '[class.scrollbar-control]': 'true' },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['./vertical.scss'],\r\n  template: `\r\n    <div scrollbarTrackY class=\"ng-scrollbar-track {{cmp.trackClass}}\">\r\n      <div scrollbarThumbY [track]=\"track\" class=\"ng-scrollbar-thumb {{cmp.thumbClass}}\"></div>\r\n    </div>\r\n  `\r\n})\r\nexport class ScrollbarY extends Scrollbar {\r\n\r\n  @ViewChild(TrackYDirective, { static: true }) readonly track: TrackYDirective;\r\n  @ViewChild(ThumbYDirective, { static: true }) readonly thumb: ThumbYDirective;\r\n\r\n  protected get viewportScrollSize(): number {\r\n    return this.cmp.viewport.scrollHeight;\r\n  }\r\n\r\n  constructor(public cmp: NgScrollbar, protected platform: Platform, @Inject(DOCUMENT) protected document: any, protected zone: NgZone) {\r\n    super(cmp, platform, document, zone);\r\n  }\r\n\r\n  protected setHovered(value: boolean): void {\r\n    this.cmp.setHovered({ verticalHovered: value });\r\n  }\r\n\r\n  onUpdated(): void {\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'scrollbar-x',\r\n  host: { '[class.scrollbar-control]': 'true' },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['./horizontal.scss'],\r\n  template: `\r\n    <div scrollbarTrackX class=\"ng-scrollbar-track {{cmp.trackClass}}\">\r\n      <div scrollbarThumbX [track]=\"track\" class=\"ng-scrollbar-thumb {{cmp.thumbClass}}\"></div>\r\n    </div>\r\n  `\r\n})\r\nexport class ScrollbarX extends Scrollbar {\r\n\r\n  @ViewChild(TrackXDirective, { static: true }) readonly track: TrackXDirective;\r\n  @ViewChild(ThumbXDirective, { static: true }) readonly thumb: ThumbXDirective;\r\n\r\n  protected get viewportScrollSize(): number {\r\n    return this.cmp.viewport.scrollWidth;\r\n  }\r\n\r\n  get thickness(): number {\r\n    return this.el.nativeElement.clientHeight;\r\n  }\r\n\r\n  constructor(private el: ElementRef,\r\n              public cmp: NgScrollbar,\r\n              protected platform: Platform,\r\n              @Inject(DOCUMENT) protected document: any, protected zone: NgZone) {\r\n    super(cmp, platform, document, zone);\r\n  }\r\n\r\n  protected setHovered(value: boolean): void {\r\n    this.cmp.setHovered({ horizontalHovered: value });\r\n  }\r\n\r\n  onUpdated(): void {\r\n    // Auto-height: Set root component height to content height\r\n    this.cmp.nativeElement.style.height = this.cmp.appearance === 'standard'\r\n      ? `${this.cmp.viewport.contentHeight + this.thickness}px`\r\n      : `${this.cmp.viewport.contentHeight}px`;\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BidiModule } from '@angular/cdk/bidi';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { PlatformModule } from '@angular/cdk/platform';\r\nimport { SmoothScrollModule } from 'ngx-scrollbar/smooth-scroll';\r\n// Uncomment the following line in development mode\r\n//import { SmoothScrollModule } from '../../smooth-scroll/src/public_api';\r\n\r\nimport { NgScrollbar } from './ng-scrollbar';\r\nimport { CssVariable } from './utils/css-variable.pipe';\r\nimport { NgAttr } from './utils/ng-attr.directive';\r\nimport { ResizeSensor } from './utils/resize-sensor.directive';\r\nimport { ThumbYDirective, ThumbXDirective } from './scrollbar/thumb/thumb.directive';\r\nimport { TrackXDirective, TrackYDirective } from './scrollbar/track/track.directive';\r\nimport { ScrollbarX, ScrollbarY } from './scrollbar/scrollbar.component';\r\nimport { ScrollViewport } from './scroll-viewport';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    BidiModule,\r\n    PortalModule,\r\n    PlatformModule,\r\n    SmoothScrollModule\r\n  ],\r\n  declarations: [\r\n    NgScrollbar,\r\n    ScrollViewport,\r\n    CssVariable,\r\n    NgAttr,\r\n    ResizeSensor,\r\n    ThumbYDirective,\r\n    ThumbXDirective,\r\n    TrackXDirective,\r\n    TrackYDirective,\r\n    ScrollbarY,\r\n    ScrollbarX\r\n  ],\r\n  exports: [\r\n    NgScrollbar,\r\n    ScrollViewport\r\n  ]\r\n})\r\nexport class NgScrollbarModule {\r\n}\r\n"]}